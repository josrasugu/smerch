{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\node\\\\smerch-front\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { SystConfig } from '../../config/syst';\nimport { HttpHeaders } from '@angular/common/http';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/common\";\nconst _c0 = [\"canvasEl\"];\nconst _c1 = [\"templates\"];\n\nfunction DesignComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵlistener(\"click\", function DesignComponent_div_10_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const color_r4 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.switchVariant(\"NULL\", color_r4, \"NULL\");\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const color_r4 = ctx.$implicit;\n    const i_r5 = ctx.index;\n    i0.ɵɵstyleMapInterpolate1(\"background-color:\", color_r4, \"; height: 20px; width: 30px; margin: 2px; float: left; border-radius: 3px; cursor: pointer;\");\n    i0.ɵɵpropertyInterpolate(\"id\", i_r5);\n  }\n}\n\nfunction DesignComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 17)(1, \"input\", 18);\n    i0.ɵɵlistener(\"mouseup\", function DesignComponent_div_15_Template_input_mouseup_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const size_r8 = restoredCtx.$implicit;\n      const ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.switchVariant(\"NULL\", \"NULL\", size_r8);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"label\", 19);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const size_r8 = ctx.$implicit;\n    const s_r9 = ctx.index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"id\", s_r9);\n    i0.ɵɵpropertyInterpolate(\"name\", s_r9);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", size_r8, \" \");\n  }\n}\n\nfunction DesignComponent_li_43_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 20);\n    i0.ɵɵlistener(\"click\", function DesignComponent_li_43_Template_li_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r15);\n      const template_r12 = restoredCtx.$implicit;\n      const d_r13 = restoredCtx.index;\n      const ctx_r14 = i0.ɵɵnextContext();\n      return ctx_r14.switchTemplate(template_r12.template_id, d_r13);\n    });\n    i0.ɵɵelementStart(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const template_r12 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassMapInterpolate1(\"nav-link \", template_r12.selected == true ? \"active\" : \"\", \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(template_r12.placement);\n  }\n}\n\nconst _c2 = [\"generateIconEl\"];\nconst _c3 = [\"generateTextEl\"];\n\nfunction MockupDialog_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵelement(1, \"img\", 13);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const mockup_r4 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"src\", mockup_r4.mockup_url, i0.ɵɵsanitizeUrl);\n  }\n}\n\nexport let DesignComponent = /*#__PURE__*/(() => {\n  class DesignComponent {\n    constructor(renderer, el, route, http, dialog) {\n      this.renderer = renderer;\n      this.el = el;\n      this.route = route;\n      this.http = http;\n      this.dialog = dialog;\n      this.dragging = false;\n      this.designSelected = false;\n      this.resize = false;\n      this.resizeDrag = false;\n      this.lastX = 0;\n      this.lastY = 0;\n      this.marginLeft = 0;\n      this.marginTop = 0;\n      this.canvasoffsetLeft = 0;\n      this.canvasoffsetTop = 0;\n      this.placementX = 0;\n      this.placementY = 0;\n      this.designImgOriginalWidth = 0;\n      this.designImgOriginalHeight = 0;\n      this.designImgWidth = 0;\n      this.designImgHeight = 0;\n      this.designImgScale = 1;\n      this.variantColors = [];\n      this.variantSizes = [];\n      this.selectedColors = [];\n      this.selectedSizes = [];\n      this.ratioScale = 0;\n      this.apiUrl = SystConfig.apiUrl;\n      this.apiPrintfulUrl = SystConfig.apiPrintfulUrl;\n      this.canvasEl = {};\n\n      this.getBase64FromUrl = /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (url) {\n          const data = yield fetch(url);\n          const blob = yield data.blob();\n          return new Promise(resolve => {\n            const reader = new FileReader();\n            reader.readAsDataURL(blob);\n\n            reader.onloadend = () => {\n              const base64data = reader.result;\n              resolve(base64data);\n            };\n          });\n        });\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }();\n    }\n\n    genHeders(token_key) {\n      this.generatedHeader = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*',\n          'Authorization': token_key\n        })\n      };\n      return this.generatedHeader;\n    }\n\n    ngOnInit() {}\n\n    ngAfterViewInit() {\n      // console.log(this.template);\n      this.route.params.subscribe(params => {\n        this.productId = params['productId'];\n        this.getAsset(params['address'], params['token']).subscribe(val => {\n          this.asset = val;\n          this.designImage = this.asset.image_url; // console.log(this.asset);\n          // this.assetsView = false;\n          // this.assetView = true;\n        }, response => {}, () => {// console.log(\"The observable is now completed.\");\n        });\n        this.getProduct(params['productId']).subscribe(val => {\n          this.serverData = val;\n          console.log(this.serverData);\n          let self = this;\n          this.serverData.result.variants.forEach(function (variant) {\n            var checkColorExist = false;\n            var checkSizeExist = false;\n\n            for (let c = 0; c < self.variantColors.length; c++) {\n              if (self.variantColors[c] == variant.color_code) {\n                checkColorExist = true;\n              }\n            }\n\n            for (let s = 0; s < self.variantSizes.length; s++) {\n              if (self.variantSizes[s] == variant.size) {\n                checkSizeExist = true;\n              }\n            }\n\n            if (!checkColorExist) {\n              self.variantColors.push(variant.color_code);\n            }\n\n            if (!checkSizeExist) {\n              self.variantSizes.push(variant.size);\n            }\n          });\n          console.log(this.variantColors, this.variantSizes); // variantColors\n          // variantSizes\n        }, response => {}, () => {// console.log(\"The observable is now completed.\");\n        });\n        this.getProductTemplates(params['productId']).subscribe(val => {\n          this.templatesData = val;\n          this.templates = this.templatesData.result.variant_mapping[0].templates;\n          this.templates[0].selected = true;\n          this.variantId = this.templatesData.result.variant_mapping[0].variant_id;\n          var templateId = this.templatesData.result.variant_mapping[0].templates[0].template_id;\n          this.selectedColors.push('');\n          this.selectedSizes.push('');\n          console.log(this.templates);\n          console.log(this.templatesData);\n          let self = this;\n          this.templatesData.result.templates.forEach(function (template) {\n            if (template.template_id == templateId) {\n              self.template = template;\n              console.log(self.template);\n              self.templatePlacement(self.template.image_url, self.template.background_color);\n            }\n          });\n        }, response => {}, () => {// console.log(\"The observable is now completed.\");\n        }); // https://api.printful.com/products/362\n      });\n    }\n\n    getAsset(contractAddress, id) {\n      var data = this.http.get(this.apiUrl + '/asset/' + contractAddress + '/' + id);\n      return data;\n    }\n\n    templatePlacement(templateUrl, color) {\n      console.log(this.template);\n      this.getBase64FromUrl(templateUrl).then(b64Img => {\n        this.htmlEl = this.canvasEl.nativeElement;\n        this.templateImgScale = 500 / this.template.template_width;\n        this.htmlEl.width = this.templateImgScale * this.template.template_width;\n        this.htmlEl.height = this.templateImgScale * this.template.template_height;\n        this.htmlEl.style.background = color + \" url('\" + b64Img + \"') left top/\" + 500 + \"px auto no-repeat\";\n        this.context = this.htmlEl.getContext('2d');\n        this.drawWindows();\n      });\n    }\n\n    switchVariant(variantIndex, color, size) {\n      this.designImgWidth = 0;\n      this.designImgHeight = 0;\n\n      if (variantIndex != 'NULL') {\n        this.templates = this.templatesData.result.variant_mapping[variantIndex].templates;\n        this.templates[0].selected = true;\n        this.variantId = this.templatesData.result.variant_mapping[variantIndex].variant_id;\n        var templateId = this.templatesData.result.variant_mapping[variantIndex].templates[0].template_id;\n      }\n\n      let self = this;\n\n      if (color != 'NULL') {\n        this.selectedColors.push(color);\n        var latestColor = this.selectedColors.slice(-1);\n        this.templatesData.result.templates.forEach(function (template) {\n          if (template.background_color == latestColor) {\n            // templateId = template.template_id;\n            for (let vm = 0; vm < self.templatesData.result.variant_mapping.length; vm++) {\n              for (let t = 0; t < self.templatesData.result.variant_mapping[vm].templates.length; t++) {\n                if (self.templatesData.result.variant_mapping[vm].templates[t].template_id == template.template_id) {\n                  self.templates = self.templatesData.result.variant_mapping[vm].templates;\n                  self.variantId = self.templatesData.result.variant_mapping[vm].variant_id;\n                  templateId = self.templatesData.result.variant_mapping[vm].templates[0].template_id; // console.log(self.templatesData.result.variant_mapping[vm].variant_id);\n                  // break;\n                }\n              }\n            }\n          }\n        });\n      }\n\n      if (size != 'NULL') {\n        this.selectedSizes.push(); // var latestSize = this.selectedSizes.slice(-1);\n      }\n\n      this.templatesData.result.templates.forEach(function (template) {\n        if (template.template_id == templateId) {\n          self.template = template;\n          self.templatePlacement(self.template.image_url, self.template.background_color);\n        }\n      });\n    }\n\n    switchTemplate(templateId, itemIndex) {\n      // console.log(this.templatesEl.nativeElement);\n      this.designImgWidth = 0;\n      this.designImgHeight = 0;\n      this.placementX = 0;\n      this.placementY = 0;\n      this.ratioScale = 0;\n      let self = this;\n      this.templatesData.result.templates.forEach(function (template) {\n        if (template.template_id == templateId) {\n          self.template = template;\n          self.templatePlacement(self.template.image_url, self.template.background_color);\n        }\n      });\n\n      for (let t = 0; t < this.templates.length; t++) {\n        if (t == itemIndex) {\n          this.templates[t].selected = true;\n        } else {\n          this.templates[t].selected = false;\n        }\n      }\n    }\n\n    getProduct(id) {\n      return this.http.post('https://dev.smerch.io/printful.php', {\n        \"fetch\": \"product-details\",\n        \"product_id\": id,\n        \"store_id\": \"8410045\"\n      });\n    }\n\n    getProductTemplates(productId) {\n      return this.http.post('https://dev.smerch.io/printful.php', {\n        \"fetch\": \"product-templates\",\n        \"product_id\": productId,\n        \"store_id\": \"8410045\"\n      });\n    }\n\n    generateMockupPost(info) {\n      return this.http.post('http://localhost/smerch/printful.php', {\n        \"fetch\": \"generate-mockup\",\n        \"info\": info\n      });\n    }\n\n    mouseDown(e) {\n      if (this.resize) {\n        this.dragging = false;\n        this.resizeDrag = true;\n      } else {\n        this.dragging = true;\n        this.resizeDrag = false;\n      }\n\n      const rect = this.htmlEl.getBoundingClientRect();\n      var mx = Math.floor(e.clientX - rect.left);\n      var my = Math.floor(e.clientY - rect.top);\n      this.designSelect(mx, my);\n    }\n\n    mouseUp(e) {\n      this.dragging = false;\n      this.resizeDrag = false;\n    }\n\n    onMouseMove(e) {\n      var evt = e || event;\n      var deltaX = evt.clientX - this.lastX;\n      var deltaY = evt.clientY - this.lastY;\n      this.lastX = evt.clientX;\n      this.lastY = evt.clientY;\n\n      if (this.dragging) {\n        // console.log(\"Mouse move\");\n        this.placementX += deltaX;\n        this.placementY += deltaY;\n        this.drawWindows();\n      }\n\n      if (this.designSelected) {\n        const rect = this.htmlEl.getBoundingClientRect();\n        var mx = Math.floor(e.clientX - rect.left);\n        var my = Math.floor(e.clientY - rect.top);\n\n        if (!this.resizeDrag) {\n          this.resize = this.inDrawing(mx, my, [this.placementX + this.designImgWidth * this.designImgScale - 10, this.placementY + this.designImgHeight * this.designImgScale - 10, this.placementX + this.designImgWidth * this.designImgScale, this.placementY + this.designImgHeight * this.designImgScale]);\n        } // console.log(this.resize);\n\n\n        if (this.resize) {\n          this.htmlEl.style.cursor = \"nw-resize\";\n        } else {\n          this.htmlEl.style.cursor = \"default\";\n        }\n      }\n\n      if (this.resize == true && this.resizeDrag == true) {\n        // this.designImgHeight += deltaY;\n        this.designImgWidth += deltaX;\n        this.ratioScale = this.designImgWidth / this.designImgOriginalWidth;\n        this.designImgHeight = this.ratioScale * this.designImgOriginalHeight;\n        this.drawWindows();\n      }\n    }\n\n    drawWindows() {\n      this.context.clearRect(0, 0, 800, 700);\n      var img = new Image();\n      let self = this;\n      img.addEventListener(\"load\", function () {\n        if (self.resize) {\n          self.paintSelect();\n        } else {\n          if (self.designImgWidth == 0 && self.designImgHeight == 0) {\n            self.printAreaHeight = self.template.print_area_height * self.templateImgScale;\n            self.printAreaWidth = self.template.print_area_width * self.templateImgScale;\n            self.printAreaX = self.template.print_area_left * self.templateImgScale;\n            self.printAreaY = self.template.print_area_top * self.templateImgScale;\n\n            for (let t = 0; t < self.templates.length; t++) {\n              if (self.templates[t].template_id == self.template.template_id) {\n                if (self.templates[t].placement_x != undefined) {\n                  self.placementX = self.templates[t].placement_x;\n                  self.placementY = self.templates[t].placement_y;\n                  self.ratioScale = self.templates[t].ratio_scale;\n                } else {\n                  self.placementX = self.template.print_area_left * self.templateImgScale;\n                  self.placementY = self.template.print_area_top * self.templateImgScale;\n                  self.ratioScale = self.printAreaWidth / this.naturalWidth;\n                  self.templates[t].placement_x = self.placementX;\n                  self.templates[t].placement_y = self.placementY;\n                  self.templates[t].ratio_scale = self.ratioScale;\n                  self.templates[t].original_ratio_scale = self.ratioScale;\n                  self.templates[t].template_img_scale = self.templateImgScale;\n                  self.templates[t].variant_id = self.variantId;\n                  self.templates[t].original_img_width = this.naturalWidth;\n                  self.templates[t].original_img_height = this.naturalHeight;\n                  self.templates[t].img_width = this.naturalWidth * self.ratioScale;\n                  self.templates[t].img_height = this.naturalHeight * self.ratioScale;\n                }\n              }\n            }\n\n            self.designImgOriginalWidth = this.naturalWidth;\n            self.designImgOriginalHeight = this.naturalHeight;\n            self.designImgWidth = this.naturalWidth * self.ratioScale;\n            self.designImgHeight = this.naturalHeight * self.ratioScale;\n          }\n        } // console.log(self.placementX, self.placementY);\n        // console.log(self.placementX/self.templateImgScale, self.placementY/self.templateImgScale);\n\n\n        for (let t = 0; t < self.templates.length; t++) {\n          if (self.templates[t].template_id == self.template.template_id) {\n            self.templates[t].placement_x = self.placementX;\n            self.templates[t].placement_y = self.placementY;\n            self.templates[t].ratio_scale = self.ratioScale;\n            self.templates[t].template_img_scale = self.templateImgScale;\n            self.templates[t].variant_id = self.variantId;\n            self.templates[t].original_img_width = this.naturalWidth;\n            self.templates[t].original_img_height = this.naturalHeight;\n            self.templates[t].img_width = this.naturalWidth * self.ratioScale;\n            self.templates[t].img_height = this.naturalHeight * self.ratioScale;\n          }\n        } // console.log(self.designImgWidth, self.designImgHeight);\n\n\n        self.context.drawImage(img, self.placementX, self.placementY, self.designImgWidth * self.designImgScale, self.designImgHeight * self.designImgScale);\n        self.context.setLineDash([6]);\n        var invertedHighlight = \"#\" + self.invertHex(self.template.background_color.substring(1));\n        self.context.strokeStyle = invertedHighlight;\n        self.context.strokeRect(self.printAreaX, self.printAreaY, self.printAreaWidth, self.printAreaHeight);\n      });\n      img.src = this.designImage;\n    }\n\n    invertHex(hex) {\n      return (Number(`0x1${hex}`) ^ 0xFFFFFF).toString(16).substr(1).toUpperCase();\n    }\n\n    designSelect(x, y) {\n      // var checkPoint = inDrawing(x,y,[minX, minY, maxX, maxY]);\n      var checkPoint = this.inDrawing(x, y, [this.placementX, this.placementY, this.placementX + this.designImgWidth * this.designImgScale, this.placementY + this.designImgHeight * this.designImgScale]);\n\n      if (checkPoint) {\n        this.designSelected = true;\n        this.paintSelect();\n      } else {\n        this.designSelected = false;\n      }\n    }\n\n    paintSelect() {\n      this.context.setLineDash([6]);\n      var invertedHighlight = \"#\" + this.invertHex(this.template.background_color.substring(1));\n      this.context.strokeStyle = invertedHighlight;\n      this.context.strokeRect(this.placementX, this.placementY, this.designImgWidth * this.designImgScale, this.designImgHeight * this.designImgScale);\n      this.context.fillStyle = invertedHighlight;\n      this.context.fillRect(this.placementX + this.designImgWidth * this.designImgScale - 10, this.placementY + this.designImgHeight * this.designImgScale - 10, 10, 10);\n    }\n\n    inDrawing(x, y, rect) {\n      if (x >= rect['0'] && x <= rect['2'] && y >= rect['1'] && y <= rect['3']) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n    generateMockup() {\n      /*    console.log(this.template);\r\n          console.log(this.ratioScale);\r\n          console.log(this.templates);*/\n      console.log(this.templatesData);\n      let self = this;\n      let variant_ids = [];\n      let files = [];\n      this.templatesData.result.templates.forEach(function (template) {\n        for (let t = 0; t < self.templates.length; t++) {\n          if (template.template_id == self.templates[t].template_id) {\n            var fixRatio = self.templates[t].img_width / (self.templates[t].original_img_width * self.templates[t].original_ratio_scale);\n            var fixWidth = template.template_width * fixRatio;\n            var fixHeight = template.template_height * fixRatio;\n            var top = self.templates[t].placement_y / self.templates[t].template_img_scale - template.print_area_top;\n            var left = self.templates[t].placement_x / self.templates[t].template_img_scale - template.print_area_left;\n\n            if (!isNaN(top)) {\n              variant_ids.push(self.templates[t].variant_id);\n              files.push({\n                \"placement\": self.templates[t].placement,\n                \"image_url\": self.designImage,\n                \"position\": {\n                  \"area_width\": template.template_width,\n                  \"area_height\": template.template_height,\n                  \"width\": fixWidth,\n                  \"height\": fixHeight,\n                  \"top\": top,\n                  \"left\": left\n                }\n              });\n            } // console.log(self.templates[t].placement_y / self.templates[t].template_img_scale, template.print_area_top, top);\n            // console.log(self.templates[t].placement_x / self.templates[t].template_img_scale, template.print_area_left, left);\n\n          }\n        }\n      });\n      var postData = {\n        \"store_id\": 8410045,\n        \"product_id\": self.productId,\n        \"variant_ids\": variant_ids,\n        \"format\": \"jpg\",\n        \"files\": files\n      };\n      self.generateMockupPost(postData).subscribe(val => {\n        self.mockupGeneratorResponse = val;\n        this.fetchPreviewMockup(self.mockupGeneratorResponse.result.task_key);\n      }, response => {}, () => {// console.log(\"The observable is now completed.\");\n      }); // :::::::::::::::::::::::::::::::::::::::::::::::::::\n    }\n\n    fetchPreviewMockup(taskId) {\n      const dialogRef = this.dialog.open(MockupDialog, {\n        width: \"100%\",\n        data: {\n          task_id: taskId\n        }\n      });\n      dialogRef.afterClosed().subscribe(result => {// this.getTemplates(this.screenId)\n      });\n    }\n\n  }\n\n  DesignComponent.ɵfac = function DesignComponent_Factory(t) {\n    return new (t || DesignComponent)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.MatDialog));\n  };\n\n  DesignComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DesignComponent,\n    selectors: [[\"app-design\"]],\n    viewQuery: function DesignComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.canvasEl = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templatesEl = _t.first);\n      }\n    },\n    decls: 46,\n    vars: 8,\n    consts: [[1, \"container\", 2, \"background-color\", \"#fff\", \"min-height\", \"500px\", \"padding\", \"20px\"], [1, \"row\"], [1, \"col-md-6\", \"col-sm-6\"], [\"action\", \"#\"], [\"value\", \"Bike\", 3, \"id\", \"style\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"form-check\", \"style\", \"float: left; margin-right: 5px;\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-md-12\", 2, \"margin\", \"20px 0 20px 0\"], [1, \"btn\", \"btn-info\", 2, \"margin\", \"10px 10px 0 0\", 3, \"click\"], [2, \"font-size\", \"26px\", \"color\", \"#2C3D63\"], [1, \"col-md-12\"], [1, \"badge\", \"text-bg-info\"], [1, \"col-12\", 2, \"margin-bottom\", \"20px\"], [\"id\", \"templates\", 1, \"nav\", \"nav-tabs\"], [\"class\", \"nav-item\", \"style\", \"cursor: pointer;\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [2, \"background\", \"#f5f5f5\", \"border\", \"1px solid #ccc\", 3, \"mousedown\", \"mouseup\", \"mousemove\"], [\"canvasEl\", \"\"], [\"value\", \"Bike\", 3, \"id\", \"click\"], [1, \"form-check\", 2, \"float\", \"left\", \"margin-right\", \"5px\"], [\"type\", \"checkbox\", \"value\", \"\", 1, \"form-check-input\", 3, \"id\", \"name\", \"mouseup\"], [\"for\", \"flexCheckDefault\", 1, \"form-check-label\"], [1, \"nav-item\", 2, \"cursor\", \"pointer\", 3, \"click\"]],\n    template: function DesignComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 1)(4, \"form\", 3)(5, \"p\")(6, \"strong\");\n        i0.ɵɵtext(7, \"Choose colors:\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"p\");\n        i0.ɵɵtext(9, \"Select all colors\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(10, DesignComponent_div_10_Template, 1, 4, \"div\", 4);\n        i0.ɵɵelementStart(11, \"p\");\n        i0.ɵɵtext(12, \"Select size(s):\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"p\");\n        i0.ɵɵtext(14, \"Select all sizes\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(15, DesignComponent_div_15_Template, 4, 3, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 1)(17, \"div\", 6)(18, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function DesignComponent_Template_button_click_18_listener() {\n          return ctx.generateMockup();\n        });\n        i0.ɵɵtext(19, \"Generate preview\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(20, \"h2\", 8);\n        i0.ɵɵtext(21);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"p\");\n        i0.ɵɵtext(23);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\", 1)(25, \"div\", 9)(26, \"ul\")(27, \"li\");\n        i0.ɵɵtext(28, \"Type \");\n        i0.ɵɵelementStart(29, \"span\", 10);\n        i0.ɵɵtext(30);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(31, \"li\");\n        i0.ɵɵtext(32, \"Brand \");\n        i0.ɵɵelementStart(33, \"span\", 10);\n        i0.ɵɵtext(34);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(35, \"li\");\n        i0.ɵɵtext(36, \"Model \");\n        i0.ɵɵelementStart(37, \"span\", 10);\n        i0.ɵɵtext(38);\n        i0.ɵɵelementEnd()()()()()()();\n        i0.ɵɵelementStart(39, \"div\", 2)(40, \"div\", 1)(41, \"div\", 11)(42, \"ul\", 12);\n        i0.ɵɵtemplate(43, DesignComponent_li_43_Template, 3, 4, \"li\", 13);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(44, \"canvas\", 14, 15);\n        i0.ɵɵlistener(\"mousedown\", function DesignComponent_Template_canvas_mousedown_44_listener($event) {\n          return ctx.mouseDown($event);\n        })(\"mouseup\", function DesignComponent_Template_canvas_mouseup_44_listener($event) {\n          return ctx.mouseUp($event);\n        })(\"mousemove\", function DesignComponent_Template_canvas_mousemove_44_listener($event) {\n          return ctx.onMouseMove($event);\n        });\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngForOf\", ctx.variantColors);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.variantSizes);\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate(ctx.serverData == null ? null : ctx.serverData.result.product.title);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.serverData == null ? null : ctx.serverData.result.product.description);\n        i0.ɵɵadvance(7);\n        i0.ɵɵtextInterpolate1(\"\", ctx.serverData == null ? null : ctx.serverData.result.product.type, \" \");\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\"\", ctx.serverData == null ? null : ctx.serverData.result.product.brand, \" \");\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\"\", ctx.serverData == null ? null : ctx.serverData.result.product.model, \" \");\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.templates);\n      }\n    },\n    directives: [i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.NgForm, i5.NgForOf],\n    styles: [\".example-list[_ngcontent-%COMP%]{width:500px;max-width:100%;border:solid 1px #ccc;min-height:40px;display:block;background:white;border-radius:4px;overflow:hidden}.example-box[_ngcontent-%COMP%]{padding:10px;border-bottom:solid 1px #ccc;color:#000000de;display:flex;flex-direction:row;align-items:center;justify-content:space-between;box-sizing:border-box;cursor:move;background:white;font-size:14px}.cdk-drag-preview[_ngcontent-%COMP%]{box-sizing:border-box;border-radius:4px;box-shadow:0 5px 5px -3px #0003,0 8px 10px 1px #00000024,0 3px 14px 2px #0000001f}.cdk-drag-placeholder[_ngcontent-%COMP%]{opacity:0}.cdk-drag-animating[_ngcontent-%COMP%]{transition:transform .25s cubic-bezier(0,0,.2,1)}.example-box[_ngcontent-%COMP%]:last-child{border:none}.example-list.cdk-drop-list-dragging[_ngcontent-%COMP%]   .example-box[_ngcontent-%COMP%]:not(.cdk-drag-placeholder){transition:transform .25s cubic-bezier(0,0,.2,1)}\"]\n  });\n  return DesignComponent;\n})();\nexport let MockupDialog = /*#__PURE__*/(() => {\n  class MockupDialog {\n    constructor(renderer, elementRef, dialog, http, // private dt: PresentationService,\n    dialogRef, data) {\n      this.renderer = renderer;\n      this.elementRef = elementRef;\n      this.dialog = dialog;\n      this.http = http;\n      this.dialogRef = dialogRef;\n      this.data = data;\n    }\n\n    onNoClick() {\n      this.dialogRef.close();\n    }\n\n    ngOnInit() {}\n\n    ngAfterViewInit() {\n      let self = this;\n      this.refreshIntervalId = setInterval(function () {\n        self.getMockupResults(self.data.task_id).subscribe(val => {\n          self.serverData = val;\n\n          if (self.serverData.result.status == \"completed\") {\n            self.clearMockupCheck();\n          }\n\n          self.generateIconEl.nativeElement.className = \"\";\n          self.generateIconEl.nativeElement.className = \"fa fa-check-circle-o\";\n          self.generateIconEl.nativeElement.style.color = \"green\";\n          self.generateIconEl.nativeElement.style.fontSize = \"30px\";\n          self.generateTextEl.nativeElement.fontSize = \"40px\";\n          self.generateTextEl.nativeElement.innerHTML = \"Generated successfully\";\n        }, response => {}, () => {// console.log(\"The observable is now completed.\");\n        });\n      }, 3000);\n    }\n\n    clearMockupCheck() {\n      clearInterval(this.refreshIntervalId);\n    }\n\n    getMockupResults(taskId) {\n      return this.http.post('http://localhost/smerch/printful.php', {\n        \"fetch\": \"check-mockup-task\",\n        \"info\": {\n          \"task_id\": taskId\n        }\n      });\n    }\n\n  }\n\n  MockupDialog.ɵfac = function MockupDialog_Factory(t) {\n    return new (t || MockupDialog)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i3.MatDialog), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA));\n  };\n\n  MockupDialog.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MockupDialog,\n    selectors: [[\"mockup-dialog\"]],\n    viewQuery: function MockupDialog_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c2, 5);\n        i0.ɵɵviewQuery(_c3, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.generateIconEl = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.generateTextEl = _t.first);\n      }\n    },\n    decls: 19,\n    vars: 1,\n    consts: [[\"mockupGenerationFeed\", \"\"], [2, \"font-size\", \"20px\"], [1, \"fa\", \"fa-spinner\", \"fa-spin\"], [\"generateIconEl\", \"\"], [\"generateTextEl\", \"\"], [\"mat-dialog-content\", \"\"], [1, \"row\"], [\"align\", \"center\", 1, \"col-md-8\"], [2, \"height\", \"550px\", \"overflow\", \"scroll\"], [\"style\", \"padding: 20px;\", 4, \"ngFor\", \"ngForOf\"], [\"align\", \"center\", 1, \"col-md-4\"], [1, \"btn\", \"btn-info\", 2, \"margin\", \"10px 10px 0 0\"], [2, \"padding\", \"20px\"], [1, \"img-fluid\", 3, \"src\"]],\n    template: function MockupDialog_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", null, 0)(2, \"p\", 1);\n        i0.ɵɵelement(3, \"span\", 2, 3);\n        i0.ɵɵtext(5, \"\\u00A0\\u00A0\");\n        i0.ɵɵelementStart(6, \"span\", null, 4);\n        i0.ɵɵtext(8, \"Generating mockup...\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(9, \"div\", 5);\n        i0.ɵɵelementStart(10, \"div\", 6)(11, \"div\", 7)(12, \"div\", 8);\n        i0.ɵɵtemplate(13, MockupDialog_div_13_Template, 2, 1, \"div\", 9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"div\", 10)(15, \"button\", 11);\n        i0.ɵɵtext(16, \"Save design\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"button\", 11);\n        i0.ɵɵtext(18, \"Place print order\");\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"ngForOf\", ctx.serverData == null ? null : ctx.serverData.result.mockups);\n      }\n    },\n    directives: [i3.MatDialogContent, i5.NgForOf],\n    encapsulation: 2\n  });\n  return MockupDialog;\n})();","map":null,"metadata":{},"sourceType":"module"}