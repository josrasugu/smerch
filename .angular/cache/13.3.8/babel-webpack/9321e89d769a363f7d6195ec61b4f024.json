{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\node\\\\smerch-front\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { SystConfig } from '../../config/syst';\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nconst _c0 = [\"canvasEl\"];\nexport class DesignComponent {\n  constructor(renderer, el, route, http) {\n    this.renderer = renderer;\n    this.el = el;\n    this.route = route;\n    this.http = http;\n    this.dragging = false;\n    this.designSelected = false;\n    this.resize = false;\n    this.resizeDrag = false;\n    this.lastX = 0;\n    this.lastY = 0;\n    this.marginLeft = 0;\n    this.marginTop = 0;\n    this.canvasoffsetLeft = 0;\n    this.canvasoffsetTop = 0;\n    this.placementX = 100;\n    this.placementY = 100;\n    this.designImgWidth = 0;\n    this.designImgHeight = 0;\n    this.designImgScale = 1;\n    this.variantColors = [];\n    this.variantSizes = [];\n    this.selectedColors = [];\n    this.selectedSizes = [];\n    this.apiUrl = SystConfig.apiUrl;\n    this.apiPrintfulUrl = SystConfig.apiPrintfulUrl;\n    this.canvasEl = {};\n\n    this.getBase64FromUrl = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (url) {\n        const data = yield fetch(url);\n        const blob = yield data.blob();\n        return new Promise(resolve => {\n          const reader = new FileReader();\n          reader.readAsDataURL(blob);\n\n          reader.onloadend = () => {\n            const base64data = reader.result;\n            resolve(base64data);\n          };\n        });\n      });\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n  }\n\n  genHeders(token_key) {\n    this.generatedHeader = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n        'Authorization': token_key\n      })\n    };\n    return this.generatedHeader;\n  }\n\n  ngOnInit() {}\n\n  ngAfterViewInit() {\n    // console.log(this.template);\n    this.route.params.subscribe(params => {\n      this.getAsset(params['address'], params['token']).subscribe(val => {\n        this.asset = val;\n        this.designImage = this.asset.image_url; // console.log(this.asset);\n        // this.assetsView = false;\n        // this.assetView = true;\n      }, response => {}, () => {// console.log(\"The observable is now completed.\");\n      });\n      this.getProduct(params['productId']).subscribe(val => {\n        this.serverData = val; // console.log(this.serverData.result.product);\n\n        console.log(this.serverData.result.variants);\n        let self = this;\n        this.serverData.result.variants.forEach(function (variant) {\n          var checkColorExist = false;\n          var checkSizeExist = false;\n\n          for (let c = 0; c < self.variantColors.length; c++) {\n            if (self.variantColors[c] == variant.color_code) {\n              checkColorExist = true;\n            }\n          }\n\n          for (let s = 0; s < self.variantSizes.length; s++) {\n            if (self.variantSizes[s] == variant.size) {\n              checkSizeExist = true;\n            }\n          }\n\n          if (!checkColorExist) {\n            self.variantColors.push(variant.color_code);\n          }\n\n          if (!checkSizeExist) {\n            self.variantSizes.push(variant.size);\n          }\n        });\n        console.log(this.variantColors, this.variantSizes); // variantColors\n        // variantSizes\n      }, response => {}, () => {// console.log(\"The observable is now completed.\");\n      });\n      this.getProductTemplates(params['productId']).subscribe(val => {\n        this.templatesData = val; // console.log(this.templatesData);\n\n        this.templates = this.templatesData.result.variant_mapping[0].templates;\n        this.variantId = this.templatesData.result.variant_mapping[0].variant_id;\n        var templateId = this.templatesData.result.variant_mapping[0].templates[0].template_id;\n        this.selectedColors.push('');\n        this.selectedSizes.push('');\n        let self = this;\n        this.templatesData.result.templates.forEach(function (template) {\n          if (template.template_id == templateId) {\n            self.template = template;\n            self.templatePlacement(self.template.image_url, self.template.background_color);\n          }\n        });\n      }, response => {}, () => {// console.log(\"The observable is now completed.\");\n      }); // https://api.printful.com/products/362\n    });\n  }\n\n  getAsset(contractAddress, id) {\n    var data = this.http.get(this.apiUrl + '/asset/' + contractAddress + '/' + id);\n    return data;\n  }\n\n  templatePlacement(templateUrl, color) {\n    this.htmlEl = this.canvasEl.nativeElement;\n    this.htmlEl.width = 600;\n    this.htmlEl.height = 600;\n    this.getBase64FromUrl(templateUrl).then(b64Img => {\n      this.htmlEl.style.background = color + \" url('\" + b64Img + \"') left top/\" + 600 + \"px auto no-repeat\";\n      this.context = this.htmlEl.getContext('2d');\n      this.drawWindows();\n    });\n  }\n\n  switchVariant(variantIndex, color, size) {\n    console.log(variantIndex, color, size);\n\n    if (variantIndex != 'NULL') {\n      this.templates = this.templatesData.result.variant_mapping[variantIndex].templates;\n      this.variantId = this.templatesData.result.variant_mapping[variantIndex].variant_id;\n      var templateId = this.templatesData.result.variant_mapping[variantIndex].templates[0].template_id;\n    }\n\n    let self = this;\n\n    if (color != 'NULL') {\n      this.selectedColors.push(color);\n      var latestColor = this.selectedColors.slice(-1);\n      this.templatesData.result.templates.forEach(function (template) {\n        if (template.background_color == latestColor) {\n          // templateId = template.template_id;\n          for (let vm = 0; vm < self.templatesData.result.variant_mapping.length; vm++) {\n            for (let t = 0; t < self.templatesData.result.variant_mapping[vm].templates.length; t++) {\n              if (self.templatesData.result.variant_mapping[vm].templates[t].template_id == template.template_id) {\n                self.templates = self.templatesData.result.variant_mapping[vm].templates;\n                self.variantId = self.templatesData.result.variant_mapping[vm].variant_id;\n                templateId = self.templatesData.result.variant_mapping[vm].templates[0].template_id; // console.log(self.templatesData.result.variant_mapping[vm].variant_id);\n                // break;\n              }\n            }\n          }\n        }\n      });\n    }\n\n    if (size != 'NULL') {\n      this.selectedSizes.push(); // var latestSize = this.selectedSizes.slice(-1);\n    }\n\n    this.templatesData.result.templates.forEach(function (template) {\n      if (template.template_id == templateId) {\n        self.template = template;\n        self.templatePlacement(self.template.image_url, self.template.background_color);\n      }\n    });\n  }\n\n  switchTemplate(templateId) {\n    // console.log(templateId);\n    let self = this;\n    this.templatesData.result.templates.forEach(function (template) {\n      if (template.template_id == templateId) {\n        self.template = template;\n        self.templatePlacement(self.template.image_url, self.template.background_color);\n      }\n    });\n  }\n\n  getProduct(id) {\n    return this.http.post('http://localhost/smerch/printful.php', {\n      \"fetch\": \"product-details\",\n      \"product_id\": id,\n      \"store_id\": \"8410045\"\n    });\n  }\n\n  getProductTemplates(productId) {\n    return this.http.post('http://localhost/smerch/printful.php', {\n      \"fetch\": \"product-templates\",\n      \"product_id\": productId,\n      \"store_id\": \"8410045\"\n    });\n  }\n\n  mouseDown(e) {\n    if (this.resize) {\n      this.dragging = false;\n      this.resizeDrag = true;\n    } else {\n      this.dragging = true;\n      this.resizeDrag = false;\n    }\n\n    const rect = this.htmlEl.getBoundingClientRect();\n    var mx = Math.floor(e.clientX - rect.left);\n    var my = Math.floor(e.clientY - rect.top); // console.log(mx, my);\n    // var evt = e || event;\n    // console.log(evt.clientX, evt.clientY);\n\n    this.designSelect(mx, my);\n  }\n\n  mouseUp(e) {\n    this.dragging = false;\n    this.resizeDrag = false;\n  }\n\n  onMouseMove(e) {\n    var evt = e || event;\n    var deltaX = evt.clientX - this.lastX;\n    var deltaY = evt.clientY - this.lastY;\n    this.lastX = evt.clientX;\n    this.lastY = evt.clientY;\n\n    if (this.dragging) {\n      // console.log(\"Mouse move\");\n      this.placementX += deltaX;\n      this.placementY += deltaY;\n      this.drawWindows();\n    }\n\n    if (this.designSelected) {\n      const rect = this.htmlEl.getBoundingClientRect();\n      var mx = Math.floor(e.clientX - rect.left);\n      var my = Math.floor(e.clientY - rect.top);\n\n      if (!this.resizeDrag) {\n        this.resize = this.inDrawing(mx, my, [this.placementX + this.designImgWidth * this.designImgScale - 10, this.placementY + this.designImgHeight * this.designImgScale - 10, this.placementX + this.designImgWidth * this.designImgScale, this.placementY + this.designImgHeight * this.designImgScale]);\n      } // console.log(this.resize);\n\n\n      if (this.resize) {\n        this.htmlEl.style.cursor = \"nw-resize\";\n      } else {\n        this.htmlEl.style.cursor = \"default\";\n      }\n    }\n\n    if (this.resize == true && this.resizeDrag == true) {\n      // console.log(deltaX,deltaY);\n      this.designImgWidth += deltaX;\n      this.designImgHeight += deltaY;\n      this.drawWindows();\n    } // const rect = this.htmlEl.getBoundingClientRect();\n\n  }\n\n  drawWindows() {\n    this.context.clearRect(0, 0, 800, 700);\n    var img = new Image();\n    let self = this;\n    /*    img.onload = function() {\r\n          self.context.drawImage(img, self.placementX, self.placementY, 200, 100);\r\n        };*/\n\n    img.addEventListener(\"load\", function () {\n      if (self.resize) {\n        self.paintSelect();\n      } else {\n        if (self.designImgWidth == 0 && self.designImgHeight == 0) {\n          if (this.naturalWidth > 200) {\n            var ratioScale = 200 / this.naturalWidth; // self.designImgScale = (200/this.naturalWidth);\n\n            self.designImgWidth = this.naturalWidth * ratioScale;\n            self.designImgHeight = this.naturalHeight * ratioScale;\n          } else {\n            self.designImgWidth = this.naturalWidth;\n            self.designImgHeight = this.naturalHeight;\n          }\n        }\n      }\n\n      self.context.drawImage(img, self.placementX, self.placementY, self.designImgWidth * self.designImgScale, self.designImgHeight * self.designImgScale);\n    }); // img.src = '/assets/imgs/smerch-logo.png';\n\n    img.src = this.designImage;\n  }\n\n  designSelect(x, y) {\n    // console.log(this.placementX,this.placementY,this.designImgScale);\n    // var checkPoint = inDrawing(x,y,[minX, minY, maxX, maxY]);\n    var checkPoint = this.inDrawing(x, y, [this.placementX, this.placementY, this.placementX + this.designImgWidth * this.designImgScale, this.placementY + this.designImgHeight * this.designImgScale]); // console.log(checkPoint);\n\n    if (checkPoint) {\n      this.designSelected = true;\n      this.paintSelect();\n    } else {\n      this.designSelected = false;\n    }\n  }\n\n  paintSelect() {\n    this.context.setLineDash([6]);\n    this.context.strokeRect(this.placementX, this.placementY, this.designImgWidth * this.designImgScale, this.designImgHeight * this.designImgScale);\n    this.context.fillRect(this.placementX + this.designImgWidth * this.designImgScale - 10, this.placementY + this.designImgHeight * this.designImgScale - 10, 10, 10);\n  }\n\n  inDrawing(x, y, rect) {\n    if (x >= rect['0'] && x <= rect['2'] && y >= rect['1'] && y <= rect['3']) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n}\n\nDesignComponent.ɵfac = function DesignComponent_Factory(t) {\n  return new (t || DesignComponent)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.HttpClient));\n};\n\nDesignComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DesignComponent,\n  selectors: [[\"app-design\"]],\n  viewQuery: function DesignComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.canvasEl = _t.first);\n    }\n  },\n  decls: 0,\n  vars: 0,\n  template: function DesignComponent_Template(rf, ctx) {},\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJkZXNpZ24uY29tcG9uZW50LmNzcyJ9 */\"]\n});","map":{"version":3,"sources":["C:/node/smerch-front/src/app/mockup-design/design/design.component.ts"],"names":["SystConfig","HttpHeaders","i0","i1","i2","_c0","DesignComponent","constructor","renderer","el","route","http","dragging","designSelected","resize","resizeDrag","lastX","lastY","marginLeft","marginTop","canvasoffsetLeft","canvasoffsetTop","placementX","placementY","designImgWidth","designImgHeight","designImgScale","variantColors","variantSizes","selectedColors","selectedSizes","apiUrl","apiPrintfulUrl","canvasEl","getBase64FromUrl","url","data","fetch","blob","Promise","resolve","reader","FileReader","readAsDataURL","onloadend","base64data","result","genHeders","token_key","generatedHeader","headers","ngOnInit","ngAfterViewInit","params","subscribe","getAsset","val","asset","designImage","image_url","response","getProduct","serverData","console","log","variants","self","forEach","variant","checkColorExist","checkSizeExist","c","length","color_code","s","size","push","getProductTemplates","templatesData","templates","variant_mapping","variantId","variant_id","templateId","template_id","template","templatePlacement","background_color","contractAddress","id","get","templateUrl","color","htmlEl","nativeElement","width","height","then","b64Img","style","background","context","getContext","drawWindows","switchVariant","variantIndex","latestColor","slice","vm","t","switchTemplate","post","productId","mouseDown","e","rect","getBoundingClientRect","mx","Math","floor","clientX","left","my","clientY","top","designSelect","mouseUp","onMouseMove","evt","event","deltaX","deltaY","inDrawing","cursor","clearRect","img","Image","addEventListener","paintSelect","naturalWidth","ratioScale","naturalHeight","drawImage","src","x","y","checkPoint","setLineDash","strokeRect","fillRect","ɵfac","DesignComponent_Factory","ɵɵdirectiveInject","Renderer2","ElementRef","ActivatedRoute","HttpClient","ɵcmp","ɵɵdefineComponent","type","selectors","viewQuery","DesignComponent_Query","rf","ctx","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","decls","vars","DesignComponent_Template","styles"],"mappings":";AAAA,SAASA,UAAT,QAA2B,mBAA3B;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,iBAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,sBAApB;AACA,MAAMC,GAAG,GAAG,CAAC,UAAD,CAAZ;AACA,OAAO,MAAMC,eAAN,CAAsB;AACzBC,EAAAA,WAAW,CAACC,QAAD,EAAWC,EAAX,EAAeC,KAAf,EAAsBC,IAAtB,EAA4B;AACnC,SAAKH,QAAL,GAAgBA,QAAhB;AACA,SAAKC,EAAL,GAAUA,EAAV;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKC,QAAL,GAAgB,KAAhB;AACA,SAAKC,cAAL,GAAsB,KAAtB;AACA,SAAKC,MAAL,GAAc,KAAd;AACA,SAAKC,UAAL,GAAkB,KAAlB;AACA,SAAKC,KAAL,GAAa,CAAb;AACA,SAAKC,KAAL,GAAa,CAAb;AACA,SAAKC,UAAL,GAAkB,CAAlB;AACA,SAAKC,SAAL,GAAiB,CAAjB;AACA,SAAKC,gBAAL,GAAwB,CAAxB;AACA,SAAKC,eAAL,GAAuB,CAAvB;AACA,SAAKC,UAAL,GAAkB,GAAlB;AACA,SAAKC,UAAL,GAAkB,GAAlB;AACA,SAAKC,cAAL,GAAsB,CAAtB;AACA,SAAKC,eAAL,GAAuB,CAAvB;AACA,SAAKC,cAAL,GAAsB,CAAtB;AACA,SAAKC,aAAL,GAAqB,EAArB;AACA,SAAKC,YAAL,GAAoB,EAApB;AACA,SAAKC,cAAL,GAAsB,EAAtB;AACA,SAAKC,aAAL,GAAqB,EAArB;AACA,SAAKC,MAAL,GAAc/B,UAAU,CAAC+B,MAAzB;AACA,SAAKC,cAAL,GAAsBhC,UAAU,CAACgC,cAAjC;AACA,SAAKC,QAAL,GAAgB,EAAhB;;AACA,SAAKC,gBAAL;AAAA,mCAAwB,WAAOC,GAAP,EAAe;AACnC,cAAMC,IAAI,SAASC,KAAK,CAACF,GAAD,CAAxB;AACA,cAAMG,IAAI,SAASF,IAAI,CAACE,IAAL,EAAnB;AACA,eAAO,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AAC5B,gBAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACAD,UAAAA,MAAM,CAACE,aAAP,CAAqBL,IAArB;;AACAG,UAAAA,MAAM,CAACG,SAAP,GAAmB,MAAM;AACrB,kBAAMC,UAAU,GAAGJ,MAAM,CAACK,MAA1B;AACAN,YAAAA,OAAO,CAACK,UAAD,CAAP;AACH,WAHD;AAIH,SAPM,CAAP;AAQH,OAXD;;AAAA;AAAA;AAAA;AAAA;AAYH;;AACDE,EAAAA,SAAS,CAACC,SAAD,EAAY;AACjB,SAAKC,eAAL,GAAuB;AACnBC,MAAAA,OAAO,EAAE,IAAIjD,WAAJ,CAAgB;AACrB,wBAAgB,kBADK;AAErB,uCAA+B,GAFV;AAGrB,yBAAiB+C;AAHI,OAAhB;AADU,KAAvB;AAOA,WAAO,KAAKC,eAAZ;AACH;;AACDE,EAAAA,QAAQ,GAAG,CACV;;AACDC,EAAAA,eAAe,GAAG;AACd;AACA,SAAK1C,KAAL,CAAW2C,MAAX,CAAkBC,SAAlB,CAA4BD,MAAM,IAAI;AAClC,WAAKE,QAAL,CAAcF,MAAM,CAAC,SAAD,CAApB,EAAiCA,MAAM,CAAC,OAAD,CAAvC,EAAkDC,SAAlD,CAA6DE,GAAD,IAAS;AACjE,aAAKC,KAAL,GAAaD,GAAb;AACA,aAAKE,WAAL,GAAmB,KAAKD,KAAL,CAAWE,SAA9B,CAFiE,CAGjE;AACA;AACA;AACH,OAND,EAMGC,QAAQ,IAAI,CACd,CAPD,EAOG,MAAM,CACL;AACH,OATD;AAUA,WAAKC,UAAL,CAAgBR,MAAM,CAAC,WAAD,CAAtB,EAAqCC,SAArC,CAAgDE,GAAD,IAAS;AACpD,aAAKM,UAAL,GAAkBN,GAAlB,CADoD,CAEpD;;AACAO,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKF,UAAL,CAAgBhB,MAAhB,CAAuBmB,QAAnC;AACA,YAAIC,IAAI,GAAG,IAAX;AACA,aAAKJ,UAAL,CAAgBhB,MAAhB,CAAuBmB,QAAvB,CAAgCE,OAAhC,CAAwC,UAAUC,OAAV,EAAmB;AACvD,cAAIC,eAAe,GAAG,KAAtB;AACA,cAAIC,cAAc,GAAG,KAArB;;AACA,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,IAAI,CAACvC,aAAL,CAAmB6C,MAAvC,EAA+CD,CAAC,EAAhD,EAAoD;AAChD,gBAAIL,IAAI,CAACvC,aAAL,CAAmB4C,CAAnB,KAAyBH,OAAO,CAACK,UAArC,EAAiD;AAC7CJ,cAAAA,eAAe,GAAG,IAAlB;AACH;AACJ;;AACD,eAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,IAAI,CAACtC,YAAL,CAAkB4C,MAAtC,EAA8CE,CAAC,EAA/C,EAAmD;AAC/C,gBAAIR,IAAI,CAACtC,YAAL,CAAkB8C,CAAlB,KAAwBN,OAAO,CAACO,IAApC,EAA0C;AACtCL,cAAAA,cAAc,GAAG,IAAjB;AACH;AACJ;;AACD,cAAI,CAACD,eAAL,EAAsB;AAClBH,YAAAA,IAAI,CAACvC,aAAL,CAAmBiD,IAAnB,CAAwBR,OAAO,CAACK,UAAhC;AACH;;AACD,cAAI,CAACH,cAAL,EAAqB;AACjBJ,YAAAA,IAAI,CAACtC,YAAL,CAAkBgD,IAAlB,CAAuBR,OAAO,CAACO,IAA/B;AACH;AACJ,SAnBD;AAoBAZ,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKrC,aAAjB,EAAgC,KAAKC,YAArC,EAzBoD,CA0BpD;AACA;AACH,OA5BD,EA4BGgC,QAAQ,IAAI,CACd,CA7BD,EA6BG,MAAM,CACL;AACH,OA/BD;AAgCA,WAAKiB,mBAAL,CAAyBxB,MAAM,CAAC,WAAD,CAA/B,EAA8CC,SAA9C,CAAyDE,GAAD,IAAS;AAC7D,aAAKsB,aAAL,GAAqBtB,GAArB,CAD6D,CAE7D;;AACA,aAAKuB,SAAL,GAAiB,KAAKD,aAAL,CAAmBhC,MAAnB,CAA0BkC,eAA1B,CAA0C,CAA1C,EAA6CD,SAA9D;AACA,aAAKE,SAAL,GAAiB,KAAKH,aAAL,CAAmBhC,MAAnB,CAA0BkC,eAA1B,CAA0C,CAA1C,EAA6CE,UAA9D;AACA,YAAIC,UAAU,GAAG,KAAKL,aAAL,CAAmBhC,MAAnB,CAA0BkC,eAA1B,CAA0C,CAA1C,EAA6CD,SAA7C,CAAuD,CAAvD,EAA0DK,WAA3E;AACA,aAAKvD,cAAL,CAAoB+C,IAApB,CAAyB,EAAzB;AACA,aAAK9C,aAAL,CAAmB8C,IAAnB,CAAwB,EAAxB;AACA,YAAIV,IAAI,GAAG,IAAX;AACA,aAAKY,aAAL,CAAmBhC,MAAnB,CAA0BiC,SAA1B,CAAoCZ,OAApC,CAA4C,UAAUkB,QAAV,EAAoB;AAC5D,cAAIA,QAAQ,CAACD,WAAT,IAAwBD,UAA5B,EAAwC;AACpCjB,YAAAA,IAAI,CAACmB,QAAL,GAAgBA,QAAhB;AACAnB,YAAAA,IAAI,CAACoB,iBAAL,CAAuBpB,IAAI,CAACmB,QAAL,CAAc1B,SAArC,EAAgDO,IAAI,CAACmB,QAAL,CAAcE,gBAA9D;AACH;AACJ,SALD;AAMH,OAfD,EAeG3B,QAAQ,IAAI,CACd,CAhBD,EAgBG,MAAM,CACL;AACH,OAlBD,EA3CkC,CA8DlC;AACH,KA/DD;AAgEH;;AACDL,EAAAA,QAAQ,CAACiC,eAAD,EAAkBC,EAAlB,EAAsB;AAC1B,QAAIrD,IAAI,GAAG,KAAKzB,IAAL,CAAU+E,GAAV,CAAc,KAAK3D,MAAL,GAAc,SAAd,GAA0ByD,eAA1B,GAA4C,GAA5C,GAAkDC,EAAhE,CAAX;AACA,WAAOrD,IAAP;AACH;;AACDkD,EAAAA,iBAAiB,CAACK,WAAD,EAAcC,KAAd,EAAqB;AAClC,SAAKC,MAAL,GAAc,KAAK5D,QAAL,CAAc6D,aAA5B;AACA,SAAKD,MAAL,CAAYE,KAAZ,GAAoB,GAApB;AACA,SAAKF,MAAL,CAAYG,MAAZ,GAAqB,GAArB;AACA,SAAK9D,gBAAL,CAAsByD,WAAtB,EAAmCM,IAAnC,CAAyCC,MAAD,IAAY;AAChD,WAAKL,MAAL,CAAYM,KAAZ,CAAkBC,UAAlB,GAA+BR,KAAK,GAAG,QAAR,GAAmBM,MAAnB,GAA4B,cAA5B,GAA6C,GAA7C,GAAmD,mBAAlF;AACA,WAAKG,OAAL,GAAe,KAAKR,MAAL,CAAYS,UAAZ,CAAuB,IAAvB,CAAf;AACA,WAAKC,WAAL;AACH,KAJD;AAKH;;AACDC,EAAAA,aAAa,CAACC,YAAD,EAAeb,KAAf,EAAsBjB,IAAtB,EAA4B;AACrCZ,IAAAA,OAAO,CAACC,GAAR,CAAYyC,YAAZ,EAA0Bb,KAA1B,EAAiCjB,IAAjC;;AACA,QAAI8B,YAAY,IAAI,MAApB,EAA4B;AACxB,WAAK1B,SAAL,GAAiB,KAAKD,aAAL,CAAmBhC,MAAnB,CAA0BkC,eAA1B,CAA0CyB,YAA1C,EAAwD1B,SAAzE;AACA,WAAKE,SAAL,GAAiB,KAAKH,aAAL,CAAmBhC,MAAnB,CAA0BkC,eAA1B,CAA0CyB,YAA1C,EAAwDvB,UAAzE;AACA,UAAIC,UAAU,GAAG,KAAKL,aAAL,CAAmBhC,MAAnB,CAA0BkC,eAA1B,CAA0CyB,YAA1C,EAAwD1B,SAAxD,CAAkE,CAAlE,EAAqEK,WAAtF;AACH;;AACD,QAAIlB,IAAI,GAAG,IAAX;;AACA,QAAI0B,KAAK,IAAI,MAAb,EAAqB;AACjB,WAAK/D,cAAL,CAAoB+C,IAApB,CAAyBgB,KAAzB;AACA,UAAIc,WAAW,GAAG,KAAK7E,cAAL,CAAoB8E,KAApB,CAA0B,CAAC,CAA3B,CAAlB;AACA,WAAK7B,aAAL,CAAmBhC,MAAnB,CAA0BiC,SAA1B,CAAoCZ,OAApC,CAA4C,UAAUkB,QAAV,EAAoB;AAC5D,YAAIA,QAAQ,CAACE,gBAAT,IAA6BmB,WAAjC,EAA8C;AAC1C;AACA,eAAK,IAAIE,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAG1C,IAAI,CAACY,aAAL,CAAmBhC,MAAnB,CAA0BkC,eAA1B,CAA0CR,MAAhE,EAAwEoC,EAAE,EAA1E,EAA8E;AAC1E,iBAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG3C,IAAI,CAACY,aAAL,CAAmBhC,MAAnB,CAA0BkC,eAA1B,CAA0C4B,EAA1C,EAA8C7B,SAA9C,CAAwDP,MAA5E,EAAoFqC,CAAC,EAArF,EAAyF;AACrF,kBAAI3C,IAAI,CAACY,aAAL,CAAmBhC,MAAnB,CAA0BkC,eAA1B,CAA0C4B,EAA1C,EAA8C7B,SAA9C,CAAwD8B,CAAxD,EAA2DzB,WAA3D,IAA0EC,QAAQ,CAACD,WAAvF,EAAoG;AAChGlB,gBAAAA,IAAI,CAACa,SAAL,GAAiBb,IAAI,CAACY,aAAL,CAAmBhC,MAAnB,CAA0BkC,eAA1B,CAA0C4B,EAA1C,EAA8C7B,SAA/D;AACAb,gBAAAA,IAAI,CAACe,SAAL,GAAiBf,IAAI,CAACY,aAAL,CAAmBhC,MAAnB,CAA0BkC,eAA1B,CAA0C4B,EAA1C,EAA8C1B,UAA/D;AACAC,gBAAAA,UAAU,GAAGjB,IAAI,CAACY,aAAL,CAAmBhC,MAAnB,CAA0BkC,eAA1B,CAA0C4B,EAA1C,EAA8C7B,SAA9C,CAAwD,CAAxD,EAA2DK,WAAxE,CAHgG,CAIhG;AACA;AACH;AACJ;AACJ;AACJ;AACJ,OAfD;AAgBH;;AACD,QAAIT,IAAI,IAAI,MAAZ,EAAoB;AAChB,WAAK7C,aAAL,CAAmB8C,IAAnB,GADgB,CAEhB;AACH;;AACD,SAAKE,aAAL,CAAmBhC,MAAnB,CAA0BiC,SAA1B,CAAoCZ,OAApC,CAA4C,UAAUkB,QAAV,EAAoB;AAC5D,UAAIA,QAAQ,CAACD,WAAT,IAAwBD,UAA5B,EAAwC;AACpCjB,QAAAA,IAAI,CAACmB,QAAL,GAAgBA,QAAhB;AACAnB,QAAAA,IAAI,CAACoB,iBAAL,CAAuBpB,IAAI,CAACmB,QAAL,CAAc1B,SAArC,EAAgDO,IAAI,CAACmB,QAAL,CAAcE,gBAA9D;AACH;AACJ,KALD;AAMH;;AACDuB,EAAAA,cAAc,CAAC3B,UAAD,EAAa;AACvB;AACA,QAAIjB,IAAI,GAAG,IAAX;AACA,SAAKY,aAAL,CAAmBhC,MAAnB,CAA0BiC,SAA1B,CAAoCZ,OAApC,CAA4C,UAAUkB,QAAV,EAAoB;AAC5D,UAAIA,QAAQ,CAACD,WAAT,IAAwBD,UAA5B,EAAwC;AACpCjB,QAAAA,IAAI,CAACmB,QAAL,GAAgBA,QAAhB;AACAnB,QAAAA,IAAI,CAACoB,iBAAL,CAAuBpB,IAAI,CAACmB,QAAL,CAAc1B,SAArC,EAAgDO,IAAI,CAACmB,QAAL,CAAcE,gBAA9D;AACH;AACJ,KALD;AAMH;;AACD1B,EAAAA,UAAU,CAAC4B,EAAD,EAAK;AACX,WAAO,KAAK9E,IAAL,CAAUoG,IAAV,CAAe,sCAAf,EAAuD;AAC1D,eAAS,iBADiD;AAE1D,oBAActB,EAF4C;AAG1D,kBAAY;AAH8C,KAAvD,CAAP;AAKH;;AACDZ,EAAAA,mBAAmB,CAACmC,SAAD,EAAY;AAC3B,WAAO,KAAKrG,IAAL,CAAUoG,IAAV,CAAe,sCAAf,EAAuD;AAC1D,eAAS,mBADiD;AAE1D,oBAAcC,SAF4C;AAG1D,kBAAY;AAH8C,KAAvD,CAAP;AAKH;;AACDC,EAAAA,SAAS,CAACC,CAAD,EAAI;AACT,QAAI,KAAKpG,MAAT,EAAiB;AACb,WAAKF,QAAL,GAAgB,KAAhB;AACA,WAAKG,UAAL,GAAkB,IAAlB;AACH,KAHD,MAIK;AACD,WAAKH,QAAL,GAAgB,IAAhB;AACA,WAAKG,UAAL,GAAkB,KAAlB;AACH;;AACD,UAAMoG,IAAI,GAAG,KAAKtB,MAAL,CAAYuB,qBAAZ,EAAb;AACA,QAAIC,EAAE,GAAGC,IAAI,CAACC,KAAL,CAAWL,CAAC,CAACM,OAAF,GAAYL,IAAI,CAACM,IAA5B,CAAT;AACA,QAAIC,EAAE,GAAGJ,IAAI,CAACC,KAAL,CAAWL,CAAC,CAACS,OAAF,GAAYR,IAAI,CAACS,GAA5B,CAAT,CAXS,CAYT;AACA;AACA;;AACA,SAAKC,YAAL,CAAkBR,EAAlB,EAAsBK,EAAtB;AACH;;AACDI,EAAAA,OAAO,CAACZ,CAAD,EAAI;AACP,SAAKtG,QAAL,GAAgB,KAAhB;AACA,SAAKG,UAAL,GAAkB,KAAlB;AACH;;AACDgH,EAAAA,WAAW,CAACb,CAAD,EAAI;AACX,QAAIc,GAAG,GAAGd,CAAC,IAAIe,KAAf;AACA,QAAIC,MAAM,GAAGF,GAAG,CAACR,OAAJ,GAAc,KAAKxG,KAAhC;AACA,QAAImH,MAAM,GAAGH,GAAG,CAACL,OAAJ,GAAc,KAAK1G,KAAhC;AACA,SAAKD,KAAL,GAAagH,GAAG,CAACR,OAAjB;AACA,SAAKvG,KAAL,GAAa+G,GAAG,CAACL,OAAjB;;AACA,QAAI,KAAK/G,QAAT,EAAmB;AACf;AACA,WAAKU,UAAL,IAAmB4G,MAAnB;AACA,WAAK3G,UAAL,IAAmB4G,MAAnB;AACA,WAAK5B,WAAL;AACH;;AACD,QAAI,KAAK1F,cAAT,EAAyB;AACrB,YAAMsG,IAAI,GAAG,KAAKtB,MAAL,CAAYuB,qBAAZ,EAAb;AACA,UAAIC,EAAE,GAAGC,IAAI,CAACC,KAAL,CAAWL,CAAC,CAACM,OAAF,GAAYL,IAAI,CAACM,IAA5B,CAAT;AACA,UAAIC,EAAE,GAAGJ,IAAI,CAACC,KAAL,CAAWL,CAAC,CAACS,OAAF,GAAYR,IAAI,CAACS,GAA5B,CAAT;;AACA,UAAI,CAAC,KAAK7G,UAAV,EAAsB;AAClB,aAAKD,MAAL,GAAc,KAAKsH,SAAL,CAAef,EAAf,EAAmBK,EAAnB,EAAuB,CAAC,KAAKpG,UAAL,GAAmB,KAAKE,cAAL,GAAsB,KAAKE,cAA9C,GAAgE,EAAjE,EAAqE,KAAKH,UAAL,GAAmB,KAAKE,eAAL,GAAuB,KAAKC,cAA/C,GAAiE,EAAtI,EAA0I,KAAKJ,UAAL,GAAmB,KAAKE,cAAL,GAAsB,KAAKE,cAAxL,EAAyM,KAAKH,UAAL,GAAmB,KAAKE,eAAL,GAAuB,KAAKC,cAAxP,CAAvB,CAAd;AACH,OANoB,CAOrB;;;AACA,UAAI,KAAKZ,MAAT,EAAiB;AACb,aAAK+E,MAAL,CAAYM,KAAZ,CAAkBkC,MAAlB,GAA2B,WAA3B;AACH,OAFD,MAGK;AACD,aAAKxC,MAAL,CAAYM,KAAZ,CAAkBkC,MAAlB,GAA2B,SAA3B;AACH;AACJ;;AACD,QAAI,KAAKvH,MAAL,IAAe,IAAf,IAAuB,KAAKC,UAAL,IAAmB,IAA9C,EAAoD;AAChD;AACA,WAAKS,cAAL,IAAuB0G,MAAvB;AACA,WAAKzG,eAAL,IAAwB0G,MAAxB;AACA,WAAK5B,WAAL;AACH,KAhCU,CAiCX;;AACH;;AACDA,EAAAA,WAAW,GAAG;AACV,SAAKF,OAAL,CAAaiC,SAAb,CAAuB,CAAvB,EAA0B,CAA1B,EAA6B,GAA7B,EAAkC,GAAlC;AACA,QAAIC,GAAG,GAAG,IAAIC,KAAJ,EAAV;AACA,QAAItE,IAAI,GAAG,IAAX;AACA;AACR;AACA;;AACQqE,IAAAA,GAAG,CAACE,gBAAJ,CAAqB,MAArB,EAA6B,YAAY;AACrC,UAAIvE,IAAI,CAACpD,MAAT,EAAiB;AACboD,QAAAA,IAAI,CAACwE,WAAL;AACH,OAFD,MAGK;AACD,YAAIxE,IAAI,CAAC1C,cAAL,IAAuB,CAAvB,IAA4B0C,IAAI,CAACzC,eAAL,IAAwB,CAAxD,EAA2D;AACvD,cAAI,KAAKkH,YAAL,GAAoB,GAAxB,EAA6B;AACzB,gBAAIC,UAAU,GAAI,MAAM,KAAKD,YAA7B,CADyB,CAEzB;;AACAzE,YAAAA,IAAI,CAAC1C,cAAL,GAAsB,KAAKmH,YAAL,GAAoBC,UAA1C;AACA1E,YAAAA,IAAI,CAACzC,eAAL,GAAuB,KAAKoH,aAAL,GAAqBD,UAA5C;AACH,WALD,MAMK;AACD1E,YAAAA,IAAI,CAAC1C,cAAL,GAAsB,KAAKmH,YAA3B;AACAzE,YAAAA,IAAI,CAACzC,eAAL,GAAuB,KAAKoH,aAA5B;AACH;AACJ;AACJ;;AACD3E,MAAAA,IAAI,CAACmC,OAAL,CAAayC,SAAb,CAAuBP,GAAvB,EAA4BrE,IAAI,CAAC5C,UAAjC,EAA6C4C,IAAI,CAAC3C,UAAlD,EAA8D2C,IAAI,CAAC1C,cAAL,GAAsB0C,IAAI,CAACxC,cAAzF,EAAyGwC,IAAI,CAACzC,eAAL,GAAuByC,IAAI,CAACxC,cAArI;AACH,KAnBD,EAPU,CA2BV;;AACA6G,IAAAA,GAAG,CAACQ,GAAJ,GAAU,KAAKrF,WAAf;AACH;;AACDmE,EAAAA,YAAY,CAACmB,CAAD,EAAIC,CAAJ,EAAO;AACf;AACA;AACA,QAAIC,UAAU,GAAG,KAAKd,SAAL,CAAeY,CAAf,EAAkBC,CAAlB,EAAqB,CAAC,KAAK3H,UAAN,EAAkB,KAAKC,UAAvB,EAAmC,KAAKD,UAAL,GAAmB,KAAKE,cAAL,GAAsB,KAAKE,cAAjF,EAAkG,KAAKH,UAAL,GAAmB,KAAKE,eAAL,GAAuB,KAAKC,cAAjJ,CAArB,CAAjB,CAHe,CAIf;;AACA,QAAIwH,UAAJ,EAAgB;AACZ,WAAKrI,cAAL,GAAsB,IAAtB;AACA,WAAK6H,WAAL;AACH,KAHD,MAIK;AACD,WAAK7H,cAAL,GAAsB,KAAtB;AACH;AACJ;;AACD6H,EAAAA,WAAW,GAAG;AACV,SAAKrC,OAAL,CAAa8C,WAAb,CAAyB,CAAC,CAAD,CAAzB;AACA,SAAK9C,OAAL,CAAa+C,UAAb,CAAwB,KAAK9H,UAA7B,EAAyC,KAAKC,UAA9C,EAA2D,KAAKC,cAAL,GAAsB,KAAKE,cAAtF,EAAwG,KAAKD,eAAL,GAAuB,KAAKC,cAApI;AACA,SAAK2E,OAAL,CAAagD,QAAb,CAAsB,KAAK/H,UAAL,GAAmB,KAAKE,cAAL,GAAsB,KAAKE,cAA9C,GAAgE,EAAtF,EAA0F,KAAKH,UAAL,GAAmB,KAAKE,eAAL,GAAuB,KAAKC,cAA/C,GAAiE,EAA3J,EAA+J,EAA/J,EAAmK,EAAnK;AACH;;AACD0G,EAAAA,SAAS,CAACY,CAAD,EAAIC,CAAJ,EAAO9B,IAAP,EAAa;AAClB,QAAI6B,CAAC,IAAI7B,IAAI,CAAC,GAAD,CAAT,IAAkB6B,CAAC,IAAI7B,IAAI,CAAC,GAAD,CAA3B,IAAoC8B,CAAC,IAAI9B,IAAI,CAAC,GAAD,CAA7C,IAAsD8B,CAAC,IAAI9B,IAAI,CAAC,GAAD,CAAnE,EAA0E;AACtE,aAAO,IAAP;AACH,KAFD,MAGK;AACD,aAAO,KAAP;AACH;AACJ;;AApTwB;;AAsT7B7G,eAAe,CAACgJ,IAAhB,GAAuB,SAASC,uBAAT,CAAiC1C,CAAjC,EAAoC;AAAE,SAAO,KAAKA,CAAC,IAAIvG,eAAV,EAA2BJ,EAAE,CAACsJ,iBAAH,CAAqBtJ,EAAE,CAACuJ,SAAxB,CAA3B,EAA+DvJ,EAAE,CAACsJ,iBAAH,CAAqBtJ,EAAE,CAACwJ,UAAxB,CAA/D,EAAoGxJ,EAAE,CAACsJ,iBAAH,CAAqBrJ,EAAE,CAACwJ,cAAxB,CAApG,EAA6IzJ,EAAE,CAACsJ,iBAAH,CAAqBpJ,EAAE,CAACwJ,UAAxB,CAA7I,CAAP;AAA2L,CAAxP;;AACAtJ,eAAe,CAACuJ,IAAhB,GAAuB,aAAc3J,EAAE,CAAC4J,iBAAH,CAAqB;AAAEC,EAAAA,IAAI,EAAEzJ,eAAR;AAAyB0J,EAAAA,SAAS,EAAE,CAAC,CAAC,YAAD,CAAD,CAApC;AAAsDC,EAAAA,SAAS,EAAE,SAASC,qBAAT,CAA+BC,EAA/B,EAAmCC,GAAnC,EAAwC;AAAE,QAAID,EAAE,GAAG,CAAT,EAAY;AACzKjK,MAAAA,EAAE,CAACmK,WAAH,CAAehK,GAAf,EAAoB,CAApB;AACH;;AAAC,QAAI8J,EAAE,GAAG,CAAT,EAAY;AACV,UAAIG,EAAJ;;AACApK,MAAAA,EAAE,CAACqK,cAAH,CAAkBD,EAAE,GAAGpK,EAAE,CAACsK,WAAH,EAAvB,MAA6CJ,GAAG,CAACnI,QAAJ,GAAeqI,EAAE,CAACG,KAA/D;AACH;AAAE,GALmD;AAKjDC,EAAAA,KAAK,EAAE,CAL0C;AAKvCC,EAAAA,IAAI,EAAE,CALiC;AAK9BtF,EAAAA,QAAQ,EAAE,SAASuF,wBAAT,CAAkCT,EAAlC,EAAsCC,GAAtC,EAA2C,CAAG,CAL1B;AAK4BS,EAAAA,MAAM,EAAE,CAAC,qKAAD;AALpC,CAArB,CAArC","sourcesContent":["import { SystConfig } from '../../config/syst';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/router\";\r\nimport * as i2 from \"@angular/common/http\";\r\nconst _c0 = [\"canvasEl\"];\r\nexport class DesignComponent {\r\n    constructor(renderer, el, route, http) {\r\n        this.renderer = renderer;\r\n        this.el = el;\r\n        this.route = route;\r\n        this.http = http;\r\n        this.dragging = false;\r\n        this.designSelected = false;\r\n        this.resize = false;\r\n        this.resizeDrag = false;\r\n        this.lastX = 0;\r\n        this.lastY = 0;\r\n        this.marginLeft = 0;\r\n        this.marginTop = 0;\r\n        this.canvasoffsetLeft = 0;\r\n        this.canvasoffsetTop = 0;\r\n        this.placementX = 100;\r\n        this.placementY = 100;\r\n        this.designImgWidth = 0;\r\n        this.designImgHeight = 0;\r\n        this.designImgScale = 1;\r\n        this.variantColors = [];\r\n        this.variantSizes = [];\r\n        this.selectedColors = [];\r\n        this.selectedSizes = [];\r\n        this.apiUrl = SystConfig.apiUrl;\r\n        this.apiPrintfulUrl = SystConfig.apiPrintfulUrl;\r\n        this.canvasEl = {};\r\n        this.getBase64FromUrl = async (url) => {\r\n            const data = await fetch(url);\r\n            const blob = await data.blob();\r\n            return new Promise((resolve) => {\r\n                const reader = new FileReader();\r\n                reader.readAsDataURL(blob);\r\n                reader.onloadend = () => {\r\n                    const base64data = reader.result;\r\n                    resolve(base64data);\r\n                };\r\n            });\r\n        };\r\n    }\r\n    genHeders(token_key) {\r\n        this.generatedHeader = {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': token_key,\r\n            })\r\n        };\r\n        return this.generatedHeader;\r\n    }\r\n    ngOnInit() {\r\n    }\r\n    ngAfterViewInit() {\r\n        // console.log(this.template);\r\n        this.route.params.subscribe(params => {\r\n            this.getAsset(params['address'], params['token']).subscribe((val) => {\r\n                this.asset = val;\r\n                this.designImage = this.asset.image_url;\r\n                // console.log(this.asset);\r\n                // this.assetsView = false;\r\n                // this.assetView = true;\r\n            }, response => {\r\n            }, () => {\r\n                // console.log(\"The observable is now completed.\");\r\n            });\r\n            this.getProduct(params['productId']).subscribe((val) => {\r\n                this.serverData = val;\r\n                // console.log(this.serverData.result.product);\r\n                console.log(this.serverData.result.variants);\r\n                let self = this;\r\n                this.serverData.result.variants.forEach(function (variant) {\r\n                    var checkColorExist = false;\r\n                    var checkSizeExist = false;\r\n                    for (let c = 0; c < self.variantColors.length; c++) {\r\n                        if (self.variantColors[c] == variant.color_code) {\r\n                            checkColorExist = true;\r\n                        }\r\n                    }\r\n                    for (let s = 0; s < self.variantSizes.length; s++) {\r\n                        if (self.variantSizes[s] == variant.size) {\r\n                            checkSizeExist = true;\r\n                        }\r\n                    }\r\n                    if (!checkColorExist) {\r\n                        self.variantColors.push(variant.color_code);\r\n                    }\r\n                    if (!checkSizeExist) {\r\n                        self.variantSizes.push(variant.size);\r\n                    }\r\n                });\r\n                console.log(this.variantColors, this.variantSizes);\r\n                // variantColors\r\n                // variantSizes\r\n            }, response => {\r\n            }, () => {\r\n                // console.log(\"The observable is now completed.\");\r\n            });\r\n            this.getProductTemplates(params['productId']).subscribe((val) => {\r\n                this.templatesData = val;\r\n                // console.log(this.templatesData);\r\n                this.templates = this.templatesData.result.variant_mapping[0].templates;\r\n                this.variantId = this.templatesData.result.variant_mapping[0].variant_id;\r\n                var templateId = this.templatesData.result.variant_mapping[0].templates[0].template_id;\r\n                this.selectedColors.push('');\r\n                this.selectedSizes.push('');\r\n                let self = this;\r\n                this.templatesData.result.templates.forEach(function (template) {\r\n                    if (template.template_id == templateId) {\r\n                        self.template = template;\r\n                        self.templatePlacement(self.template.image_url, self.template.background_color);\r\n                    }\r\n                });\r\n            }, response => {\r\n            }, () => {\r\n                // console.log(\"The observable is now completed.\");\r\n            });\r\n            // https://api.printful.com/products/362\r\n        });\r\n    }\r\n    getAsset(contractAddress, id) {\r\n        var data = this.http.get(this.apiUrl + '/asset/' + contractAddress + '/' + id);\r\n        return data;\r\n    }\r\n    templatePlacement(templateUrl, color) {\r\n        this.htmlEl = this.canvasEl.nativeElement;\r\n        this.htmlEl.width = 600;\r\n        this.htmlEl.height = 600;\r\n        this.getBase64FromUrl(templateUrl).then((b64Img) => {\r\n            this.htmlEl.style.background = color + \" url('\" + b64Img + \"') left top/\" + 600 + \"px auto no-repeat\";\r\n            this.context = this.htmlEl.getContext('2d');\r\n            this.drawWindows();\r\n        });\r\n    }\r\n    switchVariant(variantIndex, color, size) {\r\n        console.log(variantIndex, color, size);\r\n        if (variantIndex != 'NULL') {\r\n            this.templates = this.templatesData.result.variant_mapping[variantIndex].templates;\r\n            this.variantId = this.templatesData.result.variant_mapping[variantIndex].variant_id;\r\n            var templateId = this.templatesData.result.variant_mapping[variantIndex].templates[0].template_id;\r\n        }\r\n        let self = this;\r\n        if (color != 'NULL') {\r\n            this.selectedColors.push(color);\r\n            var latestColor = this.selectedColors.slice(-1);\r\n            this.templatesData.result.templates.forEach(function (template) {\r\n                if (template.background_color == latestColor) {\r\n                    // templateId = template.template_id;\r\n                    for (let vm = 0; vm < self.templatesData.result.variant_mapping.length; vm++) {\r\n                        for (let t = 0; t < self.templatesData.result.variant_mapping[vm].templates.length; t++) {\r\n                            if (self.templatesData.result.variant_mapping[vm].templates[t].template_id == template.template_id) {\r\n                                self.templates = self.templatesData.result.variant_mapping[vm].templates;\r\n                                self.variantId = self.templatesData.result.variant_mapping[vm].variant_id;\r\n                                templateId = self.templatesData.result.variant_mapping[vm].templates[0].template_id;\r\n                                // console.log(self.templatesData.result.variant_mapping[vm].variant_id);\r\n                                // break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        if (size != 'NULL') {\r\n            this.selectedSizes.push();\r\n            // var latestSize = this.selectedSizes.slice(-1);\r\n        }\r\n        this.templatesData.result.templates.forEach(function (template) {\r\n            if (template.template_id == templateId) {\r\n                self.template = template;\r\n                self.templatePlacement(self.template.image_url, self.template.background_color);\r\n            }\r\n        });\r\n    }\r\n    switchTemplate(templateId) {\r\n        // console.log(templateId);\r\n        let self = this;\r\n        this.templatesData.result.templates.forEach(function (template) {\r\n            if (template.template_id == templateId) {\r\n                self.template = template;\r\n                self.templatePlacement(self.template.image_url, self.template.background_color);\r\n            }\r\n        });\r\n    }\r\n    getProduct(id) {\r\n        return this.http.post('http://localhost/smerch/printful.php', {\r\n            \"fetch\": \"product-details\",\r\n            \"product_id\": id,\r\n            \"store_id\": \"8410045\"\r\n        });\r\n    }\r\n    getProductTemplates(productId) {\r\n        return this.http.post('http://localhost/smerch/printful.php', {\r\n            \"fetch\": \"product-templates\",\r\n            \"product_id\": productId,\r\n            \"store_id\": \"8410045\"\r\n        });\r\n    }\r\n    mouseDown(e) {\r\n        if (this.resize) {\r\n            this.dragging = false;\r\n            this.resizeDrag = true;\r\n        }\r\n        else {\r\n            this.dragging = true;\r\n            this.resizeDrag = false;\r\n        }\r\n        const rect = this.htmlEl.getBoundingClientRect();\r\n        var mx = Math.floor(e.clientX - rect.left);\r\n        var my = Math.floor(e.clientY - rect.top);\r\n        // console.log(mx, my);\r\n        // var evt = e || event;\r\n        // console.log(evt.clientX, evt.clientY);\r\n        this.designSelect(mx, my);\r\n    }\r\n    mouseUp(e) {\r\n        this.dragging = false;\r\n        this.resizeDrag = false;\r\n    }\r\n    onMouseMove(e) {\r\n        var evt = e || event;\r\n        var deltaX = evt.clientX - this.lastX;\r\n        var deltaY = evt.clientY - this.lastY;\r\n        this.lastX = evt.clientX;\r\n        this.lastY = evt.clientY;\r\n        if (this.dragging) {\r\n            // console.log(\"Mouse move\");\r\n            this.placementX += deltaX;\r\n            this.placementY += deltaY;\r\n            this.drawWindows();\r\n        }\r\n        if (this.designSelected) {\r\n            const rect = this.htmlEl.getBoundingClientRect();\r\n            var mx = Math.floor(e.clientX - rect.left);\r\n            var my = Math.floor(e.clientY - rect.top);\r\n            if (!this.resizeDrag) {\r\n                this.resize = this.inDrawing(mx, my, [this.placementX + (this.designImgWidth * this.designImgScale) - 10, this.placementY + (this.designImgHeight * this.designImgScale) - 10, this.placementX + (this.designImgWidth * this.designImgScale), this.placementY + (this.designImgHeight * this.designImgScale)]);\r\n            }\r\n            // console.log(this.resize);\r\n            if (this.resize) {\r\n                this.htmlEl.style.cursor = \"nw-resize\";\r\n            }\r\n            else {\r\n                this.htmlEl.style.cursor = \"default\";\r\n            }\r\n        }\r\n        if (this.resize == true && this.resizeDrag == true) {\r\n            // console.log(deltaX,deltaY);\r\n            this.designImgWidth += deltaX;\r\n            this.designImgHeight += deltaY;\r\n            this.drawWindows();\r\n        }\r\n        // const rect = this.htmlEl.getBoundingClientRect();\r\n    }\r\n    drawWindows() {\r\n        this.context.clearRect(0, 0, 800, 700);\r\n        var img = new Image();\r\n        let self = this;\r\n        /*    img.onload = function() {\r\n              self.context.drawImage(img, self.placementX, self.placementY, 200, 100);\r\n            };*/\r\n        img.addEventListener(\"load\", function () {\r\n            if (self.resize) {\r\n                self.paintSelect();\r\n            }\r\n            else {\r\n                if (self.designImgWidth == 0 && self.designImgHeight == 0) {\r\n                    if (this.naturalWidth > 200) {\r\n                        var ratioScale = (200 / this.naturalWidth);\r\n                        // self.designImgScale = (200/this.naturalWidth);\r\n                        self.designImgWidth = this.naturalWidth * ratioScale;\r\n                        self.designImgHeight = this.naturalHeight * ratioScale;\r\n                    }\r\n                    else {\r\n                        self.designImgWidth = this.naturalWidth;\r\n                        self.designImgHeight = this.naturalHeight;\r\n                    }\r\n                }\r\n            }\r\n            self.context.drawImage(img, self.placementX, self.placementY, self.designImgWidth * self.designImgScale, self.designImgHeight * self.designImgScale);\r\n        });\r\n        // img.src = '/assets/imgs/smerch-logo.png';\r\n        img.src = this.designImage;\r\n    }\r\n    designSelect(x, y) {\r\n        // console.log(this.placementX,this.placementY,this.designImgScale);\r\n        // var checkPoint = inDrawing(x,y,[minX, minY, maxX, maxY]);\r\n        var checkPoint = this.inDrawing(x, y, [this.placementX, this.placementY, this.placementX + (this.designImgWidth * this.designImgScale), this.placementY + (this.designImgHeight * this.designImgScale)]);\r\n        // console.log(checkPoint);\r\n        if (checkPoint) {\r\n            this.designSelected = true;\r\n            this.paintSelect();\r\n        }\r\n        else {\r\n            this.designSelected = false;\r\n        }\r\n    }\r\n    paintSelect() {\r\n        this.context.setLineDash([6]);\r\n        this.context.strokeRect(this.placementX, this.placementY, (this.designImgWidth * this.designImgScale), (this.designImgHeight * this.designImgScale));\r\n        this.context.fillRect(this.placementX + (this.designImgWidth * this.designImgScale) - 10, this.placementY + (this.designImgHeight * this.designImgScale) - 10, 10, 10);\r\n    }\r\n    inDrawing(x, y, rect) {\r\n        if (x >= rect['0'] && x <= rect['2'] && y >= rect['1'] && y <= rect['3']) {\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n}\r\nDesignComponent.ɵfac = function DesignComponent_Factory(t) { return new (t || DesignComponent)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.HttpClient)); };\r\nDesignComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: DesignComponent, selectors: [[\"app-design\"]], viewQuery: function DesignComponent_Query(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵviewQuery(_c0, 5);\r\n    } if (rf & 2) {\r\n        let _t;\r\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.canvasEl = _t.first);\r\n    } }, decls: 0, vars: 0, template: function DesignComponent_Template(rf, ctx) { }, styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJkZXNpZ24uY29tcG9uZW50LmNzcyJ9 */\"] });\r\n"]},"metadata":{},"sourceType":"module"}