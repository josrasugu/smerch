{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\node\\\\smerch-front\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { SystConfig } from '../../config/syst';\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nconst _c0 = [\"canvasEl\"];\n\nfunction DesignComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵlistener(\"click\", function DesignComponent_div_10_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const color_r4 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.switchVariant(\"NULL\", color_r4, \"NULL\");\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const color_r4 = ctx.$implicit;\n    const i_r5 = ctx.index;\n    i0.ɵɵstyleMapInterpolate1(\"background-color:\", color_r4, \"; height: 20px; width: 30px; margin: 2px; float: left; border-radius: 3px; cursor: pointer;\");\n    i0.ɵɵpropertyInterpolate(\"id\", i_r5);\n  }\n}\n\nfunction DesignComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 12)(1, \"input\", 13);\n    i0.ɵɵlistener(\"mouseup\", function DesignComponent_div_15_Template_input_mouseup_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const size_r8 = restoredCtx.$implicit;\n      const ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.switchVariant(\"NULL\", \"NULL\", size_r8);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"label\", 14);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const size_r8 = ctx.$implicit;\n    const s_r9 = ctx.index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"id\", s_r9);\n    i0.ɵɵpropertyInterpolate(\"name\", s_r9);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", size_r8, \" \");\n  }\n}\n\nfunction DesignComponent_li_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 15);\n    i0.ɵɵlistener(\"click\", function DesignComponent_li_20_Template_li_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r15);\n      const template_r12 = restoredCtx.$implicit;\n      const ctx_r14 = i0.ɵɵnextContext();\n      return ctx_r14.switchTemplate(template_r12.template_id);\n    });\n    i0.ɵɵelementStart(1, \"span\", 16);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const template_r12 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(template_r12.placement);\n  }\n}\n\nexport let DesignComponent = /*#__PURE__*/(() => {\n  class DesignComponent {\n    constructor(renderer, el, route, http) {\n      this.renderer = renderer;\n      this.el = el;\n      this.route = route;\n      this.http = http;\n      this.dragging = false;\n      this.designSelected = false;\n      this.resize = false;\n      this.resizeDrag = false;\n      this.lastX = 0;\n      this.lastY = 0;\n      this.marginLeft = 0;\n      this.marginTop = 0;\n      this.canvasoffsetLeft = 0;\n      this.canvasoffsetTop = 0;\n      this.placementX = 100;\n      this.placementY = 100;\n      this.designImgWidth = 0;\n      this.designImgHeight = 0;\n      this.designImgScale = 1;\n      this.variantColors = [];\n      this.variantSizes = [];\n      this.selectedColors = [];\n      this.selectedSizes = [];\n      this.apiUrl = SystConfig.apiUrl;\n      this.apiPrintfulUrl = SystConfig.apiPrintfulUrl;\n      this.canvasEl = {};\n\n      this.getBase64FromUrl = /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (url) {\n          const data = yield fetch(url);\n          const blob = yield data.blob();\n          return new Promise(resolve => {\n            const reader = new FileReader();\n            reader.readAsDataURL(blob);\n\n            reader.onloadend = () => {\n              const base64data = reader.result;\n              resolve(base64data);\n            };\n          });\n        });\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }();\n    }\n\n    genHeders(token_key) {\n      this.generatedHeader = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*',\n          'Authorization': token_key\n        })\n      };\n      return this.generatedHeader;\n    }\n\n    ngOnInit() {}\n\n    ngAfterViewInit() {\n      // console.log(this.template);\n      this.route.params.subscribe(params => {\n        this.getAsset(params['address'], params['token']).subscribe(val => {\n          this.asset = val;\n          this.designImage = this.asset.image_url; // console.log(this.asset);\n          // this.assetsView = false;\n          // this.assetView = true;\n        }, response => {}, () => {// console.log(\"The observable is now completed.\");\n        });\n        this.getProduct(params['productId']).subscribe(val => {\n          this.serverData = val; // console.log(this.serverData.result.product);\n\n          console.log(this.serverData.result.variants);\n          let self = this;\n          this.serverData.result.variants.forEach(function (variant) {\n            var checkColorExist = false;\n            var checkSizeExist = false;\n\n            for (let c = 0; c < self.variantColors.length; c++) {\n              if (self.variantColors[c] == variant.color_code) {\n                checkColorExist = true;\n              }\n            }\n\n            for (let s = 0; s < self.variantSizes.length; s++) {\n              if (self.variantSizes[s] == variant.size) {\n                checkSizeExist = true;\n              }\n            }\n\n            if (!checkColorExist) {\n              self.variantColors.push(variant.color_code);\n            }\n\n            if (!checkSizeExist) {\n              self.variantSizes.push(variant.size);\n            }\n          });\n          console.log(this.variantColors, this.variantSizes); // variantColors\n          // variantSizes\n        }, response => {}, () => {// console.log(\"The observable is now completed.\");\n        });\n        this.getProductTemplates(params['productId']).subscribe(val => {\n          this.templatesData = val; // console.log(this.templatesData);\n\n          this.templates = this.templatesData.result.variant_mapping[0].templates;\n          this.variantId = this.templatesData.result.variant_mapping[0].variant_id;\n          var templateId = this.templatesData.result.variant_mapping[0].templates[0].template_id;\n          this.selectedColors.push('');\n          this.selectedSizes.push('');\n          let self = this;\n          this.templatesData.result.templates.forEach(function (template) {\n            if (template.template_id == templateId) {\n              self.template = template;\n              self.templatePlacement(self.template.image_url, self.template.background_color);\n            }\n          });\n        }, response => {}, () => {// console.log(\"The observable is now completed.\");\n        }); // https://api.printful.com/products/362\n      });\n    }\n\n    getAsset(contractAddress, id) {\n      var data = this.http.get(this.apiUrl + '/asset/' + contractAddress + '/' + id);\n      return data;\n    }\n\n    templatePlacement(templateUrl, color) {\n      this.htmlEl = this.canvasEl.nativeElement;\n      this.htmlEl.width = 600;\n      this.htmlEl.height = 600;\n      this.getBase64FromUrl(templateUrl).then(b64Img => {\n        this.htmlEl.style.background = color + \" url('\" + b64Img + \"') left top/\" + 600 + \"px auto no-repeat\";\n        this.context = this.htmlEl.getContext('2d');\n        this.drawWindows();\n      });\n    }\n\n    switchVariant(variantIndex, color, size) {\n      console.log(variantIndex, color, size);\n\n      if (variantIndex != 'NULL') {\n        this.templates = this.templatesData.result.variant_mapping[variantIndex].templates;\n        this.variantId = this.templatesData.result.variant_mapping[variantIndex].variant_id;\n        var templateId = this.templatesData.result.variant_mapping[variantIndex].templates[0].template_id;\n      }\n\n      let self = this;\n\n      if (color != 'NULL') {\n        this.selectedColors.push(color);\n        var latestColor = this.selectedColors.slice(-1);\n        this.templatesData.result.templates.forEach(function (template) {\n          if (template.background_color == latestColor) {\n            // templateId = template.template_id;\n            for (let vm = 0; vm < self.templatesData.result.variant_mapping.length; vm++) {\n              for (let t = 0; t < self.templatesData.result.variant_mapping[vm].templates.length; t++) {\n                if (self.templatesData.result.variant_mapping[vm].templates[t].template_id == template.template_id) {\n                  self.templates = self.templatesData.result.variant_mapping[vm].templates;\n                  self.variantId = self.templatesData.result.variant_mapping[vm].variant_id;\n                  templateId = self.templatesData.result.variant_mapping[vm].templates[0].template_id; // console.log(self.templatesData.result.variant_mapping[vm].variant_id);\n                  // break;\n                }\n              }\n            }\n          }\n        });\n      }\n\n      if (size != 'NULL') {\n        this.selectedSizes.push(); // var latestSize = this.selectedSizes.slice(-1);\n      }\n\n      this.templatesData.result.templates.forEach(function (template) {\n        if (template.template_id == templateId) {\n          self.template = template;\n          self.templatePlacement(self.template.image_url, self.template.background_color);\n        }\n      });\n    }\n\n    switchTemplate(templateId) {\n      // console.log(templateId);\n      let self = this;\n      this.templatesData.result.templates.forEach(function (template) {\n        if (template.template_id == templateId) {\n          self.template = template;\n          self.templatePlacement(self.template.image_url, self.template.background_color);\n        }\n      });\n    }\n\n    getProduct(id) {\n      return this.http.post('http://localhost/smerch/printful.php', {\n        \"fetch\": \"product-details\",\n        \"product_id\": id,\n        \"store_id\": \"8410045\"\n      });\n    }\n\n    getProductTemplates(productId) {\n      return this.http.post('http://localhost/smerch/printful.php', {\n        \"fetch\": \"product-templates\",\n        \"product_id\": productId,\n        \"store_id\": \"8410045\"\n      });\n    }\n\n    mouseDown(e) {\n      if (this.resize) {\n        this.dragging = false;\n        this.resizeDrag = true;\n      } else {\n        this.dragging = true;\n        this.resizeDrag = false;\n      }\n\n      const rect = this.htmlEl.getBoundingClientRect();\n      var mx = Math.floor(e.clientX - rect.left);\n      var my = Math.floor(e.clientY - rect.top); // console.log(mx, my);\n      // var evt = e || event;\n      // console.log(evt.clientX, evt.clientY);\n\n      this.designSelect(mx, my);\n    }\n\n    mouseUp(e) {\n      this.dragging = false;\n      this.resizeDrag = false;\n    }\n\n    onMouseMove(e) {\n      var evt = e || event;\n      var deltaX = evt.clientX - this.lastX;\n      var deltaY = evt.clientY - this.lastY;\n      this.lastX = evt.clientX;\n      this.lastY = evt.clientY;\n\n      if (this.dragging) {\n        // console.log(\"Mouse move\");\n        this.placementX += deltaX;\n        this.placementY += deltaY;\n        this.drawWindows();\n      }\n\n      if (this.designSelected) {\n        const rect = this.htmlEl.getBoundingClientRect();\n        var mx = Math.floor(e.clientX - rect.left);\n        var my = Math.floor(e.clientY - rect.top);\n\n        if (!this.resizeDrag) {\n          this.resize = this.inDrawing(mx, my, [this.placementX + this.designImgWidth * this.designImgScale - 10, this.placementY + this.designImgHeight * this.designImgScale - 10, this.placementX + this.designImgWidth * this.designImgScale, this.placementY + this.designImgHeight * this.designImgScale]);\n        } // console.log(this.resize);\n\n\n        if (this.resize) {\n          this.htmlEl.style.cursor = \"nw-resize\";\n        } else {\n          this.htmlEl.style.cursor = \"default\";\n        }\n      }\n\n      if (this.resize == true && this.resizeDrag == true) {\n        // console.log(deltaX,deltaY);\n        this.designImgWidth += deltaX;\n        this.designImgHeight += deltaY;\n        this.drawWindows();\n      } // const rect = this.htmlEl.getBoundingClientRect();\n\n    }\n\n    drawWindows() {\n      this.context.clearRect(0, 0, 800, 700);\n      var img = new Image();\n      let self = this;\n      /*    img.onload = function() {\r\n            self.context.drawImage(img, self.placementX, self.placementY, 200, 100);\r\n          };*/\n\n      img.addEventListener(\"load\", function () {\n        if (self.resize) {\n          self.paintSelect();\n        } else {\n          if (self.designImgWidth == 0 && self.designImgHeight == 0) {\n            if (this.naturalWidth > 200) {\n              var ratioScale = 200 / this.naturalWidth; // self.designImgScale = (200/this.naturalWidth);\n\n              self.designImgWidth = this.naturalWidth * ratioScale;\n              self.designImgHeight = this.naturalHeight * ratioScale;\n            } else {\n              self.designImgWidth = this.naturalWidth;\n              self.designImgHeight = this.naturalHeight;\n            }\n          }\n        }\n\n        self.context.drawImage(img, self.placementX, self.placementY, self.designImgWidth * self.designImgScale, self.designImgHeight * self.designImgScale);\n      }); // img.src = '/assets/imgs/smerch-logo.png';\n\n      img.src = this.designImage;\n    }\n\n    designSelect(x, y) {\n      // console.log(this.placementX,this.placementY,this.designImgScale);\n      // var checkPoint = inDrawing(x,y,[minX, minY, maxX, maxY]);\n      var checkPoint = this.inDrawing(x, y, [this.placementX, this.placementY, this.placementX + this.designImgWidth * this.designImgScale, this.placementY + this.designImgHeight * this.designImgScale]); // console.log(checkPoint);\n\n      if (checkPoint) {\n        this.designSelected = true;\n        this.paintSelect();\n      } else {\n        this.designSelected = false;\n      }\n    }\n\n    paintSelect() {\n      this.context.setLineDash([6]);\n      this.context.strokeRect(this.placementX, this.placementY, this.designImgWidth * this.designImgScale, this.designImgHeight * this.designImgScale);\n      this.context.fillRect(this.placementX + this.designImgWidth * this.designImgScale - 10, this.placementY + this.designImgHeight * this.designImgScale - 10, 10, 10);\n    }\n\n    inDrawing(x, y, rect) {\n      if (x >= rect['0'] && x <= rect['2'] && y >= rect['1'] && y <= rect['3']) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n  }\n\n  DesignComponent.ɵfac = function DesignComponent_Factory(t) {\n    return new (t || DesignComponent)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.HttpClient));\n  };\n\n  DesignComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DesignComponent,\n    selectors: [[\"app-design\"]],\n    viewQuery: function DesignComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.canvasEl = _t.first);\n      }\n    },\n    decls: 23,\n    vars: 3,\n    consts: [[1, \"container\"], [1, \"row\"], [1, \"col-md-6\", \"col-sm-6\"], [\"action\", \"#\"], [\"value\", \"Bike\", 3, \"id\", \"style\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"form-check\", \"style\", \"float: left; margin-right: 5px;\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-12\", 2, \"margin-bottom\", \"20px\"], [1, \"nav\", \"nav-tabs\"], [\"class\", \"nav-item\", \"style\", \"cursor: pointer;\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [2, \"background\", \"#f5f5f5\", \"border\", \"1px solid #ccc\", 3, \"mousedown\", \"mouseup\", \"mousemove\"], [\"canvasEl\", \"\"], [\"value\", \"Bike\", 3, \"id\", \"click\"], [1, \"form-check\", 2, \"float\", \"left\", \"margin-right\", \"5px\"], [\"type\", \"checkbox\", \"value\", \"\", 1, \"form-check-input\", 3, \"id\", \"name\", \"mouseup\"], [\"for\", \"flexCheckDefault\", 1, \"form-check-label\"], [1, \"nav-item\", 2, \"cursor\", \"pointer\", 3, \"click\"], [\"aria-current\", \"page\", 1, \"nav-link\", \"active\"]],\n    template: function DesignComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 1)(4, \"form\", 3)(5, \"p\")(6, \"strong\");\n        i0.ɵɵtext(7, \"Choose colors:\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"p\");\n        i0.ɵɵtext(9, \"Select all colors\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(10, DesignComponent_div_10_Template, 1, 4, \"div\", 4);\n        i0.ɵɵelementStart(11, \"p\");\n        i0.ɵɵtext(12, \"Select size(s):\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"p\");\n        i0.ɵɵtext(14, \"Select all sizes\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(15, DesignComponent_div_15_Template, 4, 3, \"div\", 5);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(16, \"div\", 2)(17, \"div\", 1)(18, \"div\", 6)(19, \"ul\", 7);\n        i0.ɵɵtemplate(20, DesignComponent_li_20_Template, 3, 1, \"li\", 8);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(21, \"canvas\", 9, 10);\n        i0.ɵɵlistener(\"mousedown\", function DesignComponent_Template_canvas_mousedown_21_listener($event) {\n          return ctx.mouseDown($event);\n        })(\"mouseup\", function DesignComponent_Template_canvas_mouseup_21_listener($event) {\n          return ctx.mouseUp($event);\n        })(\"mousemove\", function DesignComponent_Template_canvas_mousemove_21_listener($event) {\n          return ctx.onMouseMove($event);\n        });\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngForOf\", ctx.variantColors);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.variantSizes);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.templates);\n      }\n    },\n    directives: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.NgForm, i4.NgForOf],\n    styles: [\"\"]\n  });\n  return DesignComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}