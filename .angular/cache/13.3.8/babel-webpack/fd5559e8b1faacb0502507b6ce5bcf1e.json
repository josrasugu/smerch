{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\node\\\\smerch-front\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport { SystConfig } from '../../config/syst';\nimport { HttpHeaders } from '@angular/common/http';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@angular/common\";\n\nfunction MockupDialog_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵelement(1, \"img\", 10);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const mockup_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"src\", mockup_r1.mockup_url, i0.ɵɵsanitizeUrl);\n  }\n}\n\nlet DesignComponent = class DesignComponent {\n  constructor(renderer, el, route, http, dialog) {\n    this.renderer = renderer;\n    this.el = el;\n    this.route = route;\n    this.http = http;\n    this.dialog = dialog;\n    this.dragging = false;\n    this.designSelected = false;\n    this.resize = false;\n    this.resizeDrag = false;\n    this.lastX = 0;\n    this.lastY = 0;\n    this.marginLeft = 0;\n    this.marginTop = 0;\n    this.canvasoffsetLeft = 0;\n    this.canvasoffsetTop = 0;\n    this.placementX = 0;\n    this.placementY = 0;\n    this.designImgOriginalWidth = 0;\n    this.designImgOriginalHeight = 0;\n    this.designImgWidth = 0;\n    this.designImgHeight = 0;\n    this.designImgScale = 1;\n    this.variantColors = [];\n    this.variantSizes = [];\n    this.selectedColors = [];\n    this.selectedSizes = [];\n    this.ratioScale = 0;\n    this.apiUrl = SystConfig.apiUrl;\n    this.apiPrintfulUrl = SystConfig.apiPrintfulUrl;\n    this.canvasEl = {};\n\n    this.getBase64FromUrl = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (url) {\n        const data = yield fetch(url);\n        const blob = yield data.blob();\n        return new Promise(resolve => {\n          const reader = new FileReader();\n          reader.readAsDataURL(blob);\n\n          reader.onloadend = () => {\n            const base64data = reader.result;\n            resolve(base64data);\n          };\n        });\n      });\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n  }\n\n  genHeders(token_key) {\n    this.generatedHeader = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n        'Authorization': token_key\n      })\n    };\n    return this.generatedHeader;\n  }\n\n  ngOnInit() {}\n\n  ngAfterViewInit() {\n    // console.log(this.template);\n    this.route.params.subscribe(params => {\n      this.productId = params['productId'];\n      this.getAsset(params['address'], params['token']).subscribe(val => {\n        this.asset = val;\n        this.designImage = this.asset.image_url; // console.log(this.asset);\n        // this.assetsView = false;\n        // this.assetView = true;\n      }, response => {}, () => {// console.log(\"The observable is now completed.\");\n      });\n      this.getProduct(params['productId']).subscribe(val => {\n        this.serverData = val; // console.log(this.serverData.result.product);\n\n        console.log(this.serverData.result.variants);\n        let self = this;\n        this.serverData.result.variants.forEach(function (variant) {\n          var checkColorExist = false;\n          var checkSizeExist = false;\n\n          for (let c = 0; c < self.variantColors.length; c++) {\n            if (self.variantColors[c] == variant.color_code) {\n              checkColorExist = true;\n            }\n          }\n\n          for (let s = 0; s < self.variantSizes.length; s++) {\n            if (self.variantSizes[s] == variant.size) {\n              checkSizeExist = true;\n            }\n          }\n\n          if (!checkColorExist) {\n            self.variantColors.push(variant.color_code);\n          }\n\n          if (!checkSizeExist) {\n            self.variantSizes.push(variant.size);\n          }\n        });\n        console.log(this.variantColors, this.variantSizes); // variantColors\n        // variantSizes\n      }, response => {}, () => {// console.log(\"The observable is now completed.\");\n      });\n      this.getProductTemplates(params['productId']).subscribe(val => {\n        this.templatesData = val;\n        this.templates = this.templatesData.result.variant_mapping[0].templates;\n        this.variantId = this.templatesData.result.variant_mapping[0].variant_id;\n        var templateId = this.templatesData.result.variant_mapping[0].templates[0].template_id;\n        this.selectedColors.push('');\n        this.selectedSizes.push('');\n        console.log(this.templates);\n        console.log(this.templatesData);\n        let self = this;\n        this.templatesData.result.templates.forEach(function (template) {\n          if (template.template_id == templateId) {\n            self.template = template;\n            console.log(self.template);\n            self.templatePlacement(self.template.image_url, self.template.background_color);\n          }\n        });\n      }, response => {}, () => {// console.log(\"The observable is now completed.\");\n      }); // https://api.printful.com/products/362\n    });\n  }\n\n  getAsset(contractAddress, id) {\n    var data = this.http.get(this.apiUrl + '/asset/' + contractAddress + '/' + id);\n    return data;\n  }\n\n  templatePlacement(templateUrl, color) {\n    console.log(this.template);\n    this.getBase64FromUrl(templateUrl).then(b64Img => {\n      this.htmlEl = this.canvasEl.nativeElement;\n      this.templateImgScale = 500 / this.template.template_width;\n      this.htmlEl.width = this.templateImgScale * this.template.template_width;\n      this.htmlEl.height = this.templateImgScale * this.template.template_height;\n      this.htmlEl.style.background = color + \" url('\" + b64Img + \"') left top/\" + 500 + \"px auto no-repeat\";\n      this.context = this.htmlEl.getContext('2d');\n      this.drawWindows();\n    });\n  }\n\n  switchVariant(variantIndex, color, size) {\n    this.designImgWidth = 0;\n    this.designImgHeight = 0;\n\n    if (variantIndex != 'NULL') {\n      this.templates = this.templatesData.result.variant_mapping[variantIndex].templates;\n      this.variantId = this.templatesData.result.variant_mapping[variantIndex].variant_id;\n      var templateId = this.templatesData.result.variant_mapping[variantIndex].templates[0].template_id;\n    }\n\n    let self = this;\n\n    if (color != 'NULL') {\n      this.selectedColors.push(color);\n      var latestColor = this.selectedColors.slice(-1);\n      this.templatesData.result.templates.forEach(function (template) {\n        if (template.background_color == latestColor) {\n          // templateId = template.template_id;\n          for (let vm = 0; vm < self.templatesData.result.variant_mapping.length; vm++) {\n            for (let t = 0; t < self.templatesData.result.variant_mapping[vm].templates.length; t++) {\n              if (self.templatesData.result.variant_mapping[vm].templates[t].template_id == template.template_id) {\n                self.templates = self.templatesData.result.variant_mapping[vm].templates;\n                self.variantId = self.templatesData.result.variant_mapping[vm].variant_id;\n                templateId = self.templatesData.result.variant_mapping[vm].templates[0].template_id; // console.log(self.templatesData.result.variant_mapping[vm].variant_id);\n                // break;\n              }\n            }\n          }\n        }\n      });\n    }\n\n    if (size != 'NULL') {\n      this.selectedSizes.push(); // var latestSize = this.selectedSizes.slice(-1);\n    }\n\n    this.templatesData.result.templates.forEach(function (template) {\n      if (template.template_id == templateId) {\n        self.template = template;\n        self.templatePlacement(self.template.image_url, self.template.background_color);\n      }\n    });\n  }\n\n  switchTemplate(templateId, itemIndex) {\n    // console.log(this.templatesEl);\n    this.designImgWidth = 0;\n    this.designImgHeight = 0;\n    this.placementX = 0;\n    this.placementY = 0;\n    this.ratioScale = 0;\n    let self = this;\n    this.templatesData.result.templates.forEach(function (template) {\n      if (template.template_id == templateId) {\n        self.template = template;\n        self.templatePlacement(self.template.image_url, self.template.background_color);\n      }\n    });\n  }\n\n  getProduct(id) {\n    return this.http.post('https://dev.smerch.io/printful.php', {\n      \"fetch\": \"product-details\",\n      \"product_id\": id,\n      \"store_id\": \"8410045\"\n    });\n  }\n\n  getProductTemplates(productId) {\n    return this.http.post('https://dev.smerch.io/printful.php', {\n      \"fetch\": \"product-templates\",\n      \"product_id\": productId,\n      \"store_id\": \"8410045\"\n    });\n  }\n\n  generateMockupPost(info) {\n    return this.http.post('http://localhost/smerch/printful.php', {\n      \"fetch\": \"generate-mockup\",\n      \"info\": info\n    });\n  }\n\n  mouseDown(e) {\n    if (this.resize) {\n      this.dragging = false;\n      this.resizeDrag = true;\n    } else {\n      this.dragging = true;\n      this.resizeDrag = false;\n    }\n\n    const rect = this.htmlEl.getBoundingClientRect();\n    var mx = Math.floor(e.clientX - rect.left);\n    var my = Math.floor(e.clientY - rect.top);\n    this.designSelect(mx, my);\n  }\n\n  mouseUp(e) {\n    this.dragging = false;\n    this.resizeDrag = false;\n  }\n\n  onMouseMove(e) {\n    var evt = e || event;\n    var deltaX = evt.clientX - this.lastX;\n    var deltaY = evt.clientY - this.lastY;\n    this.lastX = evt.clientX;\n    this.lastY = evt.clientY;\n\n    if (this.dragging) {\n      // console.log(\"Mouse move\");\n      this.placementX += deltaX;\n      this.placementY += deltaY;\n      this.drawWindows();\n    }\n\n    if (this.designSelected) {\n      const rect = this.htmlEl.getBoundingClientRect();\n      var mx = Math.floor(e.clientX - rect.left);\n      var my = Math.floor(e.clientY - rect.top);\n\n      if (!this.resizeDrag) {\n        this.resize = this.inDrawing(mx, my, [this.placementX + this.designImgWidth * this.designImgScale - 10, this.placementY + this.designImgHeight * this.designImgScale - 10, this.placementX + this.designImgWidth * this.designImgScale, this.placementY + this.designImgHeight * this.designImgScale]);\n      } // console.log(this.resize);\n\n\n      if (this.resize) {\n        this.htmlEl.style.cursor = \"nw-resize\";\n      } else {\n        this.htmlEl.style.cursor = \"default\";\n      }\n    }\n\n    if (this.resize == true && this.resizeDrag == true) {\n      // this.designImgHeight += deltaY;\n      this.designImgWidth += deltaX;\n      this.ratioScale = this.designImgWidth / this.designImgOriginalWidth;\n      this.designImgHeight = this.ratioScale * this.designImgOriginalHeight;\n      this.drawWindows();\n    }\n  }\n\n  drawWindows() {\n    this.context.clearRect(0, 0, 800, 700);\n    var img = new Image();\n    let self = this;\n    img.addEventListener(\"load\", function () {\n      if (self.resize) {\n        self.paintSelect();\n      } else {\n        if (self.designImgWidth == 0 && self.designImgHeight == 0) {\n          self.printAreaHeight = self.template.print_area_height * self.templateImgScale;\n          self.printAreaWidth = self.template.print_area_width * self.templateImgScale;\n          self.printAreaX = self.template.print_area_left * self.templateImgScale;\n          self.printAreaY = self.template.print_area_top * self.templateImgScale;\n\n          for (let t = 0; t < self.templates.length; t++) {\n            if (self.templates[t].template_id == self.template.template_id) {\n              if (self.templates[t].placement_x != undefined) {\n                self.placementX = self.templates[t].placement_x;\n                self.placementY = self.templates[t].placement_y;\n                self.ratioScale = self.templates[t].ratio_scale;\n              } else {\n                self.placementX = self.template.print_area_left * self.templateImgScale;\n                self.placementY = self.template.print_area_top * self.templateImgScale;\n                self.ratioScale = self.printAreaWidth / this.naturalWidth;\n                self.templates[t].placement_x = self.placementX;\n                self.templates[t].placement_y = self.placementY;\n                self.templates[t].ratio_scale = self.ratioScale;\n                self.templates[t].original_ratio_scale = self.ratioScale;\n                self.templates[t].template_img_scale = self.templateImgScale;\n                self.templates[t].variant_id = self.variantId;\n                self.templates[t].original_img_width = this.naturalWidth;\n                self.templates[t].original_img_height = this.naturalHeight;\n                self.templates[t].img_width = this.naturalWidth * self.ratioScale;\n                self.templates[t].img_height = this.naturalHeight * self.ratioScale;\n              }\n            }\n          }\n\n          self.designImgOriginalWidth = this.naturalWidth;\n          self.designImgOriginalHeight = this.naturalHeight;\n          self.designImgWidth = this.naturalWidth * self.ratioScale;\n          self.designImgHeight = this.naturalHeight * self.ratioScale;\n        } else {\n          console.log(\"the else we need\"); // designImgWidth\n          // designImgHeight\n        }\n      }\n\n      console.log(self.placementX, self.placementY);\n      console.log(self.placementX / self.templateImgScale, self.placementY / self.templateImgScale);\n\n      for (let t = 0; t < self.templates.length; t++) {\n        if (self.templates[t].template_id == self.template.template_id) {\n          self.templates[t].placement_x = self.placementX;\n          self.templates[t].placement_y = self.placementY;\n          self.templates[t].ratio_scale = self.ratioScale;\n          self.templates[t].template_img_scale = self.templateImgScale;\n          self.templates[t].variant_id = self.variantId;\n          self.templates[t].original_img_width = this.naturalWidth;\n          self.templates[t].original_img_height = this.naturalHeight;\n          self.templates[t].img_width = this.naturalWidth * self.ratioScale;\n          self.templates[t].img_height = this.naturalHeight * self.ratioScale;\n        }\n      } // console.log(self.designImgWidth, self.designImgHeight);\n\n\n      self.context.drawImage(img, self.placementX, self.placementY, self.designImgWidth * self.designImgScale, self.designImgHeight * self.designImgScale);\n      self.context.setLineDash([6]);\n      var invertedHighlight = \"#\" + self.invertHex(self.template.background_color.substring(1));\n      self.context.strokeStyle = invertedHighlight;\n      self.context.strokeRect(self.printAreaX, self.printAreaY, self.printAreaWidth, self.printAreaHeight);\n    });\n    img.src = this.designImage;\n  }\n\n  invertHex(hex) {\n    return (Number(`0x1${hex}`) ^ 0xFFFFFF).toString(16).substr(1).toUpperCase();\n  }\n\n  designSelect(x, y) {\n    // var checkPoint = inDrawing(x,y,[minX, minY, maxX, maxY]);\n    var checkPoint = this.inDrawing(x, y, [this.placementX, this.placementY, this.placementX + this.designImgWidth * this.designImgScale, this.placementY + this.designImgHeight * this.designImgScale]);\n\n    if (checkPoint) {\n      this.designSelected = true;\n      this.paintSelect();\n    } else {\n      this.designSelected = false;\n    }\n  }\n\n  paintSelect() {\n    this.context.setLineDash([6]);\n    var invertedHighlight = \"#\" + this.invertHex(this.template.background_color.substring(1));\n    this.context.strokeStyle = invertedHighlight;\n    this.context.strokeRect(this.placementX, this.placementY, this.designImgWidth * this.designImgScale, this.designImgHeight * this.designImgScale);\n    this.context.fillStyle = invertedHighlight;\n    this.context.fillRect(this.placementX + this.designImgWidth * this.designImgScale - 10, this.placementY + this.designImgHeight * this.designImgScale - 10, 10, 10);\n  }\n\n  inDrawing(x, y, rect) {\n    if (x >= rect['0'] && x <= rect['2'] && y >= rect['1'] && y <= rect['3']) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  generateMockup() {\n    /*    console.log(this.template);\r\n        console.log(this.ratioScale);\r\n        console.log(this.templates);*/\n    console.log(this.templatesData);\n    let self = this;\n    let variant_ids = [];\n    let files = [];\n    this.templatesData.result.templates.forEach(function (template) {\n      for (let t = 0; t < self.templates.length; t++) {\n        if (template.template_id == self.templates[t].template_id) {\n          console.log(self.templates[t]);\n          console.log(template);\n          var fixRatio = self.templates[t].img_width / (self.templates[t].original_img_width * self.templates[t].original_ratio_scale);\n          var fixWidth = template.template_width * fixRatio;\n          var fixHeight = template.template_height * fixRatio;\n          var top = self.templates[t].placement_y / self.templates[t].template_img_scale - template.print_area_top;\n          var left = self.templates[t].placement_x / self.templates[t].template_img_scale - template.print_area_left;\n\n          if (!isNaN(top)) {\n            variant_ids.push(self.templates[t].variant_id);\n            files.push({\n              \"placement\": self.templates[t].placement,\n              \"image_url\": self.designImage,\n              \"position\": {\n                \"area_width\": template.template_width,\n                \"area_height\": template.template_height,\n                \"width\": fixWidth,\n                \"height\": fixHeight,\n                \"top\": top,\n                \"left\": left\n              }\n            });\n          } // console.log(self.templates[t].placement_y / self.templates[t].template_img_scale, template.print_area_top, top);\n          // console.log(self.templates[t].placement_x / self.templates[t].template_img_scale, template.print_area_left, left);\n\n        }\n      }\n    });\n    var postData = {\n      \"store_id\": 8410045,\n      \"product_id\": self.productId,\n      \"variant_ids\": variant_ids,\n      \"format\": \"jpg\",\n      \"files\": files\n    };\n    self.generateMockupPost(postData).subscribe(val => {\n      self.mockupGeneratorResponse = val;\n      this.fetchPreviewMockup(self.mockupGeneratorResponse.result.task_key);\n    }, response => {}, () => {// console.log(\"The observable is now completed.\");\n    }); // :::::::::::::::::::::::::::::::::::::::::::::::::::\n  }\n\n  fetchPreviewMockup(taskId) {\n    const dialogRef = this.dialog.open(MockupDialog, {\n      width: \"100%\",\n      data: {\n        task_id: taskId\n      }\n    });\n    dialogRef.afterClosed().subscribe(result => {// this.getTemplates(this.screenId)\n    });\n  }\n\n};\n\n__decorate([ViewChild('canvasEl')], DesignComponent.prototype, \"canvasEl\", void 0);\n\n__decorate([ViewChild('templates')], DesignComponent.prototype, \"templatesEl\", void 0);\n\nDesignComponent = __decorate([Component({\n  selector: 'app-design',\n  templateUrl: './design.component.html',\n  styleUrls: ['./design.component.css']\n})], DesignComponent);\nexport { DesignComponent };\nexport class MockupDialog {\n  constructor(http, // private dt: PresentationService,\n  dialogRef, data) {\n    this.http = http;\n    this.dialogRef = dialogRef;\n    this.data = data;\n  }\n\n  onNoClick() {\n    this.dialogRef.close();\n  }\n\n  ngOnInit() {\n    let self = this;\n    this.refreshIntervalId = setInterval(function () {\n      self.getMockupResults(self.data.task_id).subscribe(val => {\n        self.serverData = val;\n\n        if (self.serverData.result.status == \"completed\") {\n          self.clearMockupCheck();\n        }\n      }, response => {}, () => {// console.log(\"The observable is now completed.\");\n      });\n    }, 3000);\n  }\n\n  clearMockupCheck() {\n    clearInterval(this.refreshIntervalId);\n  }\n\n  getMockupResults(taskId) {\n    return this.http.post('http://localhost/smerch/printful.php', {\n      \"fetch\": \"check-mockup-task\",\n      \"info\": {\n        \"task_id\": taskId\n      }\n    });\n  }\n\n}\n\nMockupDialog.ɵfac = function MockupDialog_Factory(t) {\n  return new (t || MockupDialog)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA));\n};\n\nMockupDialog.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MockupDialog,\n  selectors: [[\"mockup-dialog\"]],\n  decls: 14,\n  vars: 1,\n  consts: [[\"mat-dialog-title\", \"\"], [\"mat-dialog-content\", \"\"], [\"mat-dialog-actions\", \"\"], [\"mat-raised-button\", \"\", \"color\", \"primary\"], [1, \"btn\", \"btn-info\", 2, \"margin\", \"10px 10px 0 0\"], [1, \"row\"], [\"align\", \"center\", 1, \"col-md-8\"], [2, \"height\", \"550px\", \"overflow\", \"scroll\"], [\"style\", \"padding: 20px;\", 4, \"ngFor\", \"ngForOf\"], [2, \"padding\", \"20px\"], [1, \"img-fluid\", 3, \"src\"]],\n  template: function MockupDialog_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1, \"Generating mockup...\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(2, \"div\", 1);\n      i0.ɵɵelementStart(3, \"div\", 2);\n      i0.ɵɵelement(4, \"button\", 3)(5, \"button\", 3);\n      i0.ɵɵelementStart(6, \"button\", 4);\n      i0.ɵɵtext(7, \"Save design\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"button\", 4);\n      i0.ɵɵtext(9, \"Place print order\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"div\", 5)(11, \"div\", 6)(12, \"div\", 7);\n      i0.ɵɵtemplate(13, MockupDialog_div_13_Template, 2, 1, \"div\", 8);\n      i0.ɵɵelementEnd()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"ngForOf\", ctx.serverData == null ? null : ctx.serverData.result.mockups);\n    }\n  },\n  directives: [i2.MatDialogTitle, i2.MatDialogContent, i2.MatDialogActions, i3.NgForOf],\n  encapsulation: 2\n});","map":{"version":3,"sources":["C:/node/smerch-front/src/app/mockup-design/design/design.component.ts"],"names":["__decorate","Component","ViewChild","SystConfig","HttpHeaders","MAT_DIALOG_DATA","i0","i1","i2","i3","MockupDialog_div_13_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","mockup_r1","$implicit","ɵɵadvance","ɵɵpropertyInterpolate","mockup_url","ɵɵsanitizeUrl","DesignComponent","constructor","renderer","el","route","http","dialog","dragging","designSelected","resize","resizeDrag","lastX","lastY","marginLeft","marginTop","canvasoffsetLeft","canvasoffsetTop","placementX","placementY","designImgOriginalWidth","designImgOriginalHeight","designImgWidth","designImgHeight","designImgScale","variantColors","variantSizes","selectedColors","selectedSizes","ratioScale","apiUrl","apiPrintfulUrl","canvasEl","getBase64FromUrl","url","data","fetch","blob","Promise","resolve","reader","FileReader","readAsDataURL","onloadend","base64data","result","genHeders","token_key","generatedHeader","headers","ngOnInit","ngAfterViewInit","params","subscribe","productId","getAsset","val","asset","designImage","image_url","response","getProduct","serverData","console","log","variants","self","forEach","variant","checkColorExist","checkSizeExist","c","length","color_code","s","size","push","getProductTemplates","templatesData","templates","variant_mapping","variantId","variant_id","templateId","template_id","template","templatePlacement","background_color","contractAddress","id","get","templateUrl","color","then","b64Img","htmlEl","nativeElement","templateImgScale","template_width","width","height","template_height","style","background","context","getContext","drawWindows","switchVariant","variantIndex","latestColor","slice","vm","t","switchTemplate","itemIndex","post","generateMockupPost","info","mouseDown","e","rect","getBoundingClientRect","mx","Math","floor","clientX","left","my","clientY","top","designSelect","mouseUp","onMouseMove","evt","event","deltaX","deltaY","inDrawing","cursor","clearRect","img","Image","addEventListener","paintSelect","printAreaHeight","print_area_height","printAreaWidth","print_area_width","printAreaX","print_area_left","printAreaY","print_area_top","placement_x","undefined","placement_y","ratio_scale","naturalWidth","original_ratio_scale","template_img_scale","original_img_width","original_img_height","naturalHeight","img_width","img_height","drawImage","setLineDash","invertedHighlight","invertHex","substring","strokeStyle","strokeRect","src","hex","Number","toString","substr","toUpperCase","x","y","checkPoint","fillStyle","fillRect","generateMockup","variant_ids","files","fixRatio","fixWidth","fixHeight","isNaN","placement","postData","mockupGeneratorResponse","fetchPreviewMockup","task_key","taskId","dialogRef","open","MockupDialog","task_id","afterClosed","prototype","selector","styleUrls","onNoClick","close","refreshIntervalId","setInterval","getMockupResults","status","clearMockupCheck","clearInterval","ɵfac","MockupDialog_Factory","ɵɵdirectiveInject","HttpClient","MatDialogRef","ɵcmp","ɵɵdefineComponent","type","selectors","decls","vars","consts","MockupDialog_Template","ɵɵtext","ɵɵtemplate","ɵɵproperty","mockups","directives","MatDialogTitle","MatDialogContent","MatDialogActions","NgForOf","encapsulation"],"mappings":"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","sourcesContent":["import { __decorate } from \"tslib\";\r\nimport { Component, ViewChild } from '@angular/core';\r\nimport { SystConfig } from '../../config/syst';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/common/http\";\r\nimport * as i2 from \"@angular/material/dialog\";\r\nimport * as i3 from \"@angular/common\";\r\nfunction MockupDialog_div_13_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"div\", 9);\r\n    i0.ɵɵelement(1, \"img\", 10);\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const mockup_r1 = ctx.$implicit;\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵpropertyInterpolate(\"src\", mockup_r1.mockup_url, i0.ɵɵsanitizeUrl);\r\n} }\r\nlet DesignComponent = class DesignComponent {\r\n    constructor(renderer, el, route, http, dialog) {\r\n        this.renderer = renderer;\r\n        this.el = el;\r\n        this.route = route;\r\n        this.http = http;\r\n        this.dialog = dialog;\r\n        this.dragging = false;\r\n        this.designSelected = false;\r\n        this.resize = false;\r\n        this.resizeDrag = false;\r\n        this.lastX = 0;\r\n        this.lastY = 0;\r\n        this.marginLeft = 0;\r\n        this.marginTop = 0;\r\n        this.canvasoffsetLeft = 0;\r\n        this.canvasoffsetTop = 0;\r\n        this.placementX = 0;\r\n        this.placementY = 0;\r\n        this.designImgOriginalWidth = 0;\r\n        this.designImgOriginalHeight = 0;\r\n        this.designImgWidth = 0;\r\n        this.designImgHeight = 0;\r\n        this.designImgScale = 1;\r\n        this.variantColors = [];\r\n        this.variantSizes = [];\r\n        this.selectedColors = [];\r\n        this.selectedSizes = [];\r\n        this.ratioScale = 0;\r\n        this.apiUrl = SystConfig.apiUrl;\r\n        this.apiPrintfulUrl = SystConfig.apiPrintfulUrl;\r\n        this.canvasEl = {};\r\n        this.getBase64FromUrl = async (url) => {\r\n            const data = await fetch(url);\r\n            const blob = await data.blob();\r\n            return new Promise((resolve) => {\r\n                const reader = new FileReader();\r\n                reader.readAsDataURL(blob);\r\n                reader.onloadend = () => {\r\n                    const base64data = reader.result;\r\n                    resolve(base64data);\r\n                };\r\n            });\r\n        };\r\n    }\r\n    genHeders(token_key) {\r\n        this.generatedHeader = {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Authorization': token_key,\r\n            })\r\n        };\r\n        return this.generatedHeader;\r\n    }\r\n    ;\r\n    ngOnInit() {\r\n    }\r\n    ngAfterViewInit() {\r\n        // console.log(this.template);\r\n        this.route.params.subscribe(params => {\r\n            this.productId = params['productId'];\r\n            this.getAsset(params['address'], params['token']).subscribe((val) => {\r\n                this.asset = val;\r\n                this.designImage = this.asset.image_url;\r\n                // console.log(this.asset);\r\n                // this.assetsView = false;\r\n                // this.assetView = true;\r\n            }, response => {\r\n            }, () => {\r\n                // console.log(\"The observable is now completed.\");\r\n            });\r\n            this.getProduct(params['productId']).subscribe((val) => {\r\n                this.serverData = val;\r\n                // console.log(this.serverData.result.product);\r\n                console.log(this.serverData.result.variants);\r\n                let self = this;\r\n                this.serverData.result.variants.forEach(function (variant) {\r\n                    var checkColorExist = false;\r\n                    var checkSizeExist = false;\r\n                    for (let c = 0; c < self.variantColors.length; c++) {\r\n                        if (self.variantColors[c] == variant.color_code) {\r\n                            checkColorExist = true;\r\n                        }\r\n                    }\r\n                    for (let s = 0; s < self.variantSizes.length; s++) {\r\n                        if (self.variantSizes[s] == variant.size) {\r\n                            checkSizeExist = true;\r\n                        }\r\n                    }\r\n                    if (!checkColorExist) {\r\n                        self.variantColors.push(variant.color_code);\r\n                    }\r\n                    if (!checkSizeExist) {\r\n                        self.variantSizes.push(variant.size);\r\n                    }\r\n                });\r\n                console.log(this.variantColors, this.variantSizes);\r\n                // variantColors\r\n                // variantSizes\r\n            }, response => {\r\n            }, () => {\r\n                // console.log(\"The observable is now completed.\");\r\n            });\r\n            this.getProductTemplates(params['productId']).subscribe((val) => {\r\n                this.templatesData = val;\r\n                this.templates = this.templatesData.result.variant_mapping[0].templates;\r\n                this.variantId = this.templatesData.result.variant_mapping[0].variant_id;\r\n                var templateId = this.templatesData.result.variant_mapping[0].templates[0].template_id;\r\n                this.selectedColors.push('');\r\n                this.selectedSizes.push('');\r\n                console.log(this.templates);\r\n                console.log(this.templatesData);\r\n                let self = this;\r\n                this.templatesData.result.templates.forEach(function (template) {\r\n                    if (template.template_id == templateId) {\r\n                        self.template = template;\r\n                        console.log(self.template);\r\n                        self.templatePlacement(self.template.image_url, self.template.background_color);\r\n                    }\r\n                });\r\n            }, response => {\r\n            }, () => {\r\n                // console.log(\"The observable is now completed.\");\r\n            });\r\n            // https://api.printful.com/products/362\r\n        });\r\n    }\r\n    getAsset(contractAddress, id) {\r\n        var data = this.http.get(this.apiUrl + '/asset/' + contractAddress + '/' + id);\r\n        return data;\r\n    }\r\n    templatePlacement(templateUrl, color) {\r\n        console.log(this.template);\r\n        this.getBase64FromUrl(templateUrl).then((b64Img) => {\r\n            this.htmlEl = this.canvasEl.nativeElement;\r\n            this.templateImgScale = 500 / this.template.template_width;\r\n            this.htmlEl.width = this.templateImgScale * this.template.template_width;\r\n            this.htmlEl.height = this.templateImgScale * this.template.template_height;\r\n            this.htmlEl.style.background = color + \" url('\" + b64Img + \"') left top/\" + 500 + \"px auto no-repeat\";\r\n            this.context = this.htmlEl.getContext('2d');\r\n            this.drawWindows();\r\n        });\r\n    }\r\n    switchVariant(variantIndex, color, size) {\r\n        this.designImgWidth = 0;\r\n        this.designImgHeight = 0;\r\n        if (variantIndex != 'NULL') {\r\n            this.templates = this.templatesData.result.variant_mapping[variantIndex].templates;\r\n            this.variantId = this.templatesData.result.variant_mapping[variantIndex].variant_id;\r\n            var templateId = this.templatesData.result.variant_mapping[variantIndex].templates[0].template_id;\r\n        }\r\n        let self = this;\r\n        if (color != 'NULL') {\r\n            this.selectedColors.push(color);\r\n            var latestColor = this.selectedColors.slice(-1);\r\n            this.templatesData.result.templates.forEach(function (template) {\r\n                if (template.background_color == latestColor) {\r\n                    // templateId = template.template_id;\r\n                    for (let vm = 0; vm < self.templatesData.result.variant_mapping.length; vm++) {\r\n                        for (let t = 0; t < self.templatesData.result.variant_mapping[vm].templates.length; t++) {\r\n                            if (self.templatesData.result.variant_mapping[vm].templates[t].template_id == template.template_id) {\r\n                                self.templates = self.templatesData.result.variant_mapping[vm].templates;\r\n                                self.variantId = self.templatesData.result.variant_mapping[vm].variant_id;\r\n                                templateId = self.templatesData.result.variant_mapping[vm].templates[0].template_id;\r\n                                // console.log(self.templatesData.result.variant_mapping[vm].variant_id);\r\n                                // break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        if (size != 'NULL') {\r\n            this.selectedSizes.push();\r\n            // var latestSize = this.selectedSizes.slice(-1);\r\n        }\r\n        this.templatesData.result.templates.forEach(function (template) {\r\n            if (template.template_id == templateId) {\r\n                self.template = template;\r\n                self.templatePlacement(self.template.image_url, self.template.background_color);\r\n            }\r\n        });\r\n    }\r\n    switchTemplate(templateId, itemIndex) {\r\n        // console.log(this.templatesEl);\r\n        this.designImgWidth = 0;\r\n        this.designImgHeight = 0;\r\n        this.placementX = 0;\r\n        this.placementY = 0;\r\n        this.ratioScale = 0;\r\n        let self = this;\r\n        this.templatesData.result.templates.forEach(function (template) {\r\n            if (template.template_id == templateId) {\r\n                self.template = template;\r\n                self.templatePlacement(self.template.image_url, self.template.background_color);\r\n            }\r\n        });\r\n    }\r\n    getProduct(id) {\r\n        return this.http.post('https://dev.smerch.io/printful.php', {\r\n            \"fetch\": \"product-details\",\r\n            \"product_id\": id,\r\n            \"store_id\": \"8410045\"\r\n        });\r\n    }\r\n    getProductTemplates(productId) {\r\n        return this.http.post('https://dev.smerch.io/printful.php', {\r\n            \"fetch\": \"product-templates\",\r\n            \"product_id\": productId,\r\n            \"store_id\": \"8410045\"\r\n        });\r\n    }\r\n    generateMockupPost(info) {\r\n        return this.http.post('http://localhost/smerch/printful.php', {\r\n            \"fetch\": \"generate-mockup\",\r\n            \"info\": info\r\n        });\r\n    }\r\n    mouseDown(e) {\r\n        if (this.resize) {\r\n            this.dragging = false;\r\n            this.resizeDrag = true;\r\n        }\r\n        else {\r\n            this.dragging = true;\r\n            this.resizeDrag = false;\r\n        }\r\n        const rect = this.htmlEl.getBoundingClientRect();\r\n        var mx = Math.floor(e.clientX - rect.left);\r\n        var my = Math.floor(e.clientY - rect.top);\r\n        this.designSelect(mx, my);\r\n    }\r\n    mouseUp(e) {\r\n        this.dragging = false;\r\n        this.resizeDrag = false;\r\n    }\r\n    onMouseMove(e) {\r\n        var evt = e || event;\r\n        var deltaX = evt.clientX - this.lastX;\r\n        var deltaY = evt.clientY - this.lastY;\r\n        this.lastX = evt.clientX;\r\n        this.lastY = evt.clientY;\r\n        if (this.dragging) {\r\n            // console.log(\"Mouse move\");\r\n            this.placementX += deltaX;\r\n            this.placementY += deltaY;\r\n            this.drawWindows();\r\n        }\r\n        if (this.designSelected) {\r\n            const rect = this.htmlEl.getBoundingClientRect();\r\n            var mx = Math.floor(e.clientX - rect.left);\r\n            var my = Math.floor(e.clientY - rect.top);\r\n            if (!this.resizeDrag) {\r\n                this.resize = this.inDrawing(mx, my, [this.placementX + (this.designImgWidth * this.designImgScale) - 10, this.placementY + (this.designImgHeight * this.designImgScale) - 10, this.placementX + (this.designImgWidth * this.designImgScale), this.placementY + (this.designImgHeight * this.designImgScale)]);\r\n            }\r\n            // console.log(this.resize);\r\n            if (this.resize) {\r\n                this.htmlEl.style.cursor = \"nw-resize\";\r\n            }\r\n            else {\r\n                this.htmlEl.style.cursor = \"default\";\r\n            }\r\n        }\r\n        if (this.resize == true && this.resizeDrag == true) {\r\n            // this.designImgHeight += deltaY;\r\n            this.designImgWidth += deltaX;\r\n            this.ratioScale = this.designImgWidth / this.designImgOriginalWidth;\r\n            this.designImgHeight = this.ratioScale * this.designImgOriginalHeight;\r\n            this.drawWindows();\r\n        }\r\n    }\r\n    drawWindows() {\r\n        this.context.clearRect(0, 0, 800, 700);\r\n        var img = new Image();\r\n        let self = this;\r\n        img.addEventListener(\"load\", function () {\r\n            if (self.resize) {\r\n                self.paintSelect();\r\n            }\r\n            else {\r\n                if (self.designImgWidth == 0 && self.designImgHeight == 0) {\r\n                    self.printAreaHeight = self.template.print_area_height * self.templateImgScale;\r\n                    self.printAreaWidth = self.template.print_area_width * self.templateImgScale;\r\n                    self.printAreaX = self.template.print_area_left * self.templateImgScale;\r\n                    self.printAreaY = self.template.print_area_top * self.templateImgScale;\r\n                    for (let t = 0; t < self.templates.length; t++) {\r\n                        if (self.templates[t].template_id == self.template.template_id) {\r\n                            if (self.templates[t].placement_x != undefined) {\r\n                                self.placementX = self.templates[t].placement_x;\r\n                                self.placementY = self.templates[t].placement_y;\r\n                                self.ratioScale = self.templates[t].ratio_scale;\r\n                            }\r\n                            else {\r\n                                self.placementX = self.template.print_area_left * self.templateImgScale;\r\n                                self.placementY = self.template.print_area_top * self.templateImgScale;\r\n                                self.ratioScale = (self.printAreaWidth / this.naturalWidth);\r\n                                self.templates[t].placement_x = self.placementX;\r\n                                self.templates[t].placement_y = self.placementY;\r\n                                self.templates[t].ratio_scale = self.ratioScale;\r\n                                self.templates[t].original_ratio_scale = self.ratioScale;\r\n                                self.templates[t].template_img_scale = self.templateImgScale;\r\n                                self.templates[t].variant_id = self.variantId;\r\n                                self.templates[t].original_img_width = this.naturalWidth;\r\n                                self.templates[t].original_img_height = this.naturalHeight;\r\n                                self.templates[t].img_width = this.naturalWidth * self.ratioScale;\r\n                                self.templates[t].img_height = this.naturalHeight * self.ratioScale;\r\n                            }\r\n                        }\r\n                    }\r\n                    self.designImgOriginalWidth = this.naturalWidth;\r\n                    self.designImgOriginalHeight = this.naturalHeight;\r\n                    self.designImgWidth = this.naturalWidth * self.ratioScale;\r\n                    self.designImgHeight = this.naturalHeight * self.ratioScale;\r\n                }\r\n                else {\r\n                    console.log(\"the else we need\");\r\n                    // designImgWidth\r\n                    // designImgHeight\r\n                }\r\n            }\r\n            console.log(self.placementX, self.placementY);\r\n            console.log(self.placementX / self.templateImgScale, self.placementY / self.templateImgScale);\r\n            for (let t = 0; t < self.templates.length; t++) {\r\n                if (self.templates[t].template_id == self.template.template_id) {\r\n                    self.templates[t].placement_x = self.placementX;\r\n                    self.templates[t].placement_y = self.placementY;\r\n                    self.templates[t].ratio_scale = self.ratioScale;\r\n                    self.templates[t].template_img_scale = self.templateImgScale;\r\n                    self.templates[t].variant_id = self.variantId;\r\n                    self.templates[t].original_img_width = this.naturalWidth;\r\n                    self.templates[t].original_img_height = this.naturalHeight;\r\n                    self.templates[t].img_width = this.naturalWidth * self.ratioScale;\r\n                    self.templates[t].img_height = this.naturalHeight * self.ratioScale;\r\n                }\r\n            }\r\n            // console.log(self.designImgWidth, self.designImgHeight);\r\n            self.context.drawImage(img, self.placementX, self.placementY, self.designImgWidth * self.designImgScale, self.designImgHeight * self.designImgScale);\r\n            self.context.setLineDash([6]);\r\n            var invertedHighlight = \"#\" + self.invertHex(self.template.background_color.substring(1));\r\n            self.context.strokeStyle = invertedHighlight;\r\n            self.context.strokeRect(self.printAreaX, self.printAreaY, self.printAreaWidth, self.printAreaHeight);\r\n        });\r\n        img.src = this.designImage;\r\n    }\r\n    invertHex(hex) {\r\n        return (Number(`0x1${hex}`) ^ 0xFFFFFF).toString(16).substr(1).toUpperCase();\r\n    }\r\n    designSelect(x, y) {\r\n        // var checkPoint = inDrawing(x,y,[minX, minY, maxX, maxY]);\r\n        var checkPoint = this.inDrawing(x, y, [this.placementX, this.placementY, this.placementX + (this.designImgWidth * this.designImgScale), this.placementY + (this.designImgHeight * this.designImgScale)]);\r\n        if (checkPoint) {\r\n            this.designSelected = true;\r\n            this.paintSelect();\r\n        }\r\n        else {\r\n            this.designSelected = false;\r\n        }\r\n    }\r\n    paintSelect() {\r\n        this.context.setLineDash([6]);\r\n        var invertedHighlight = \"#\" + this.invertHex(this.template.background_color.substring(1));\r\n        this.context.strokeStyle = invertedHighlight;\r\n        this.context.strokeRect(this.placementX, this.placementY, (this.designImgWidth * this.designImgScale), (this.designImgHeight * this.designImgScale));\r\n        this.context.fillStyle = invertedHighlight;\r\n        this.context.fillRect(this.placementX + (this.designImgWidth * this.designImgScale) - 10, this.placementY + (this.designImgHeight * this.designImgScale) - 10, 10, 10);\r\n    }\r\n    inDrawing(x, y, rect) {\r\n        if (x >= rect['0'] && x <= rect['2'] && y >= rect['1'] && y <= rect['3']) {\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    generateMockup() {\r\n        /*    console.log(this.template);\r\n            console.log(this.ratioScale);\r\n            console.log(this.templates);*/\r\n        console.log(this.templatesData);\r\n        let self = this;\r\n        let variant_ids = [];\r\n        let files = [];\r\n        this.templatesData.result.templates.forEach(function (template) {\r\n            for (let t = 0; t < self.templates.length; t++) {\r\n                if (template.template_id == self.templates[t].template_id) {\r\n                    console.log(self.templates[t]);\r\n                    console.log(template);\r\n                    var fixRatio = self.templates[t].img_width / (self.templates[t].original_img_width * self.templates[t].original_ratio_scale);\r\n                    var fixWidth = template.template_width * fixRatio;\r\n                    var fixHeight = template.template_height * fixRatio;\r\n                    var top = (self.templates[t].placement_y / self.templates[t].template_img_scale) - template.print_area_top;\r\n                    var left = (self.templates[t].placement_x / self.templates[t].template_img_scale) - template.print_area_left;\r\n                    if (!isNaN(top)) {\r\n                        variant_ids.push(self.templates[t].variant_id);\r\n                        files.push({\r\n                            \"placement\": self.templates[t].placement,\r\n                            \"image_url\": self.designImage,\r\n                            \"position\": {\r\n                                \"area_width\": template.template_width,\r\n                                \"area_height\": template.template_height,\r\n                                \"width\": fixWidth,\r\n                                \"height\": fixHeight,\r\n                                \"top\": top,\r\n                                \"left\": left\r\n                            }\r\n                        });\r\n                    }\r\n                    // console.log(self.templates[t].placement_y / self.templates[t].template_img_scale, template.print_area_top, top);\r\n                    // console.log(self.templates[t].placement_x / self.templates[t].template_img_scale, template.print_area_left, left);\r\n                }\r\n            }\r\n        });\r\n        var postData = {\r\n            \"store_id\": 8410045,\r\n            \"product_id\": self.productId,\r\n            \"variant_ids\": variant_ids,\r\n            \"format\": \"jpg\",\r\n            \"files\": files\r\n        };\r\n        self.generateMockupPost(postData).subscribe((val) => {\r\n            self.mockupGeneratorResponse = val;\r\n            this.fetchPreviewMockup(self.mockupGeneratorResponse.result.task_key);\r\n        }, response => {\r\n        }, () => {\r\n            // console.log(\"The observable is now completed.\");\r\n        });\r\n        // :::::::::::::::::::::::::::::::::::::::::::::::::::\r\n    }\r\n    fetchPreviewMockup(taskId) {\r\n        const dialogRef = this.dialog.open(MockupDialog, {\r\n            width: \"100%\",\r\n            data: { task_id: taskId }\r\n        });\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            // this.getTemplates(this.screenId)\r\n        });\r\n    }\r\n};\r\n__decorate([\r\n    ViewChild('canvasEl')\r\n], DesignComponent.prototype, \"canvasEl\", void 0);\r\n__decorate([\r\n    ViewChild('templates')\r\n], DesignComponent.prototype, \"templatesEl\", void 0);\r\nDesignComponent = __decorate([\r\n    Component({\r\n        selector: 'app-design',\r\n        templateUrl: './design.component.html',\r\n        styleUrls: ['./design.component.css']\r\n    })\r\n], DesignComponent);\r\nexport { DesignComponent };\r\nexport class MockupDialog {\r\n    constructor(http, \r\n    // private dt: PresentationService,\r\n    dialogRef, data) {\r\n        this.http = http;\r\n        this.dialogRef = dialogRef;\r\n        this.data = data;\r\n    }\r\n    onNoClick() {\r\n        this.dialogRef.close();\r\n    }\r\n    ngOnInit() {\r\n        let self = this;\r\n        this.refreshIntervalId = setInterval(function () {\r\n            self.getMockupResults(self.data.task_id).subscribe((val) => {\r\n                self.serverData = val;\r\n                if (self.serverData.result.status == \"completed\") {\r\n                    self.clearMockupCheck();\r\n                }\r\n            }, response => {\r\n            }, () => {\r\n                // console.log(\"The observable is now completed.\");\r\n            });\r\n        }, 3000);\r\n    }\r\n    clearMockupCheck() {\r\n        clearInterval(this.refreshIntervalId);\r\n    }\r\n    getMockupResults(taskId) {\r\n        return this.http.post('http://localhost/smerch/printful.php', {\r\n            \"fetch\": \"check-mockup-task\",\r\n            \"info\": { \"task_id\": taskId }\r\n        });\r\n    }\r\n}\r\nMockupDialog.ɵfac = function MockupDialog_Factory(t) { return new (t || MockupDialog)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA)); };\r\nMockupDialog.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: MockupDialog, selectors: [[\"mockup-dialog\"]], decls: 14, vars: 1, consts: [[\"mat-dialog-title\", \"\"], [\"mat-dialog-content\", \"\"], [\"mat-dialog-actions\", \"\"], [\"mat-raised-button\", \"\", \"color\", \"primary\"], [1, \"btn\", \"btn-info\", 2, \"margin\", \"10px 10px 0 0\"], [1, \"row\"], [\"align\", \"center\", 1, \"col-md-8\"], [2, \"height\", \"550px\", \"overflow\", \"scroll\"], [\"style\", \"padding: 20px;\", 4, \"ngFor\", \"ngForOf\"], [2, \"padding\", \"20px\"], [1, \"img-fluid\", 3, \"src\"]], template: function MockupDialog_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"h1\", 0);\r\n        i0.ɵɵtext(1, \"Generating mockup...\");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelement(2, \"div\", 1);\r\n        i0.ɵɵelementStart(3, \"div\", 2);\r\n        i0.ɵɵelement(4, \"button\", 3)(5, \"button\", 3);\r\n        i0.ɵɵelementStart(6, \"button\", 4);\r\n        i0.ɵɵtext(7, \"Save design\");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(8, \"button\", 4);\r\n        i0.ɵɵtext(9, \"Place print order\");\r\n        i0.ɵɵelementEnd()();\r\n        i0.ɵɵelementStart(10, \"div\", 5)(11, \"div\", 6)(12, \"div\", 7);\r\n        i0.ɵɵtemplate(13, MockupDialog_div_13_Template, 2, 1, \"div\", 8);\r\n        i0.ɵɵelementEnd()()();\r\n    } if (rf & 2) {\r\n        i0.ɵɵadvance(13);\r\n        i0.ɵɵproperty(\"ngForOf\", ctx.serverData == null ? null : ctx.serverData.result.mockups);\r\n    } }, directives: [i2.MatDialogTitle, i2.MatDialogContent, i2.MatDialogActions, i3.NgForOf], encapsulation: 2 });\r\n"]},"metadata":{},"sourceType":"module"}